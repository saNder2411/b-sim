{"version":3,"sources":["app/connect/NRR_2_60/settings.cljs"],"mappings":";AAOA,AAAA;AAAA,yDAAA,iBAAAA,WAAA,wEAAAC,qBAAAC,lLAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAMM,gBAAc,mBAAA,mFAAA,qFAAA,mFAAA,uDAAA,oEAAA,WAAA,pZAACC;AAArB,eACKC,fAkEA,IAAAgB;iHAjEGf,7GAiEHgB,WAAA,iBAAAC,WAAA,EAAA,QAAA,qBAAA,WAAA,iBAAAC;yVAhEwBrB,rVAgExBsB,WAAA,iBAAAC,WAAA,EAAA,OAAA,mFAAA,2CAAA,sDAAA,iBAAA,uDAAA,iCAAA,sBAAA,YAAA,WAAAnB;AA/DyB,2BAAA,mFAAA,2EAAA,mFAAA,mFAAA,+EAAAA,vaAACC,PA+D1B;;AAAA,AAAAkB;;AAAA,AAAA,QAAAC,+CAAAA,6CAAAH,SAAAC,YAAAE,yBAAAH,SAAAC;;AAAA,AAAAF;;AAAA,AAAA,QAAAI,+CAAAA,6CAAAN,SAAAC,YAAAK,yBAAAN,SAAAC;;AApEP,AAAA,GAAA,AAAAtB;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO,AAOP,AAAA;AAAA,8CAAA,iBAAAO,WAAA,6DAAAb,qBAAAC,5JAAOe;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAAX,8BAAAH,sBAAAC;AAAA,AAAA;AA6DO,IAAA+B,WAAAC;IAAAC,WAAA,cAAA,CAyGA,iBAAAS,WAAA;IAAAC,WAAA,iBAAAC,WAAA,EAAA,YAAA,UAAA,WAAA;AAAA,AAAAA;;AAAA,AAAA,QAAAd,+CAAAA,6CAAAY,SAAAC,YAAAb,yBAAAY,SAAAC;iCAnKAtC,5BA0DA,iBAAA6B;IAAAC,WAAA;AAAA,AAAA,QAAAL,+CAAAA,6CAAAI,SAAAC,YAAAL,yBAAAI,SAAAC;;AAAA,AAAA,QAAAC,gDAAAA,8CAAAL,SAAAE,YAAAG,0BAAAL,SAAAE;;AA7DP,AAAA,GAAA,AAAA9B;AAAA,IAAAW,WAAAF;AAAA,AAAA,CAAA,AAAAE,uBAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG,AAKP,AAAA;AAAA,kDAAA,iBAAAC,WAAA,iEAAAjB,qBAAAC,pKAAOmB;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAAf,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAMoB,gBAAc,mBAAA,mFAAA,qFAAA,mFAAA,uDAAA,oEAAA,WAAA,pZAACb;IACfc,sCAAoC,mBAAA,mFAAA,tGAACd;AAD3C,AAEE,oBAAM,iBAAAe,oBAAKF;AAAL,AAAA,oBAAAE;AAAmBD;;AAAnBC;;;AAAN,eACKC,fAoDF,IAAAc;IAAAC,WAAA,iBAAAC,WAAA,EAAA,QAAA,oBAAA,aAAA;AAnD+B,2BAAA,mFAAA,vGAAC5B,PAmDhC;GAAA,UAAA;AAlD+B,2BAAA,mFAAA,vGAACA,PAkDhC;0CAhDKI,vCAgDL,WAAA,iBAAAyB;IAAAC,WAAA;AAAA,AAAA,QAAAX,+CAAAA,6CAAAU,SAAAC,YAAAX,yBAAAU,SAAAC;;AAAA,AAAAF;;AAAA,AAAA,QAAAT,+CAAAA,6CAAAO,SAAAC,YAAAR,yBAAAO,SAAAC;;AArDH;;;AAHJ,AAAA,GAAA,AAAAnC;AAAA,IAAAe,WAAAF;AAAA,AAAA,CAAA,AAAAE,uBAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG","names":["G__34082","props__27584__auto__","maybe-ref__27585__auto__","vec__34083","helix.core/extract-cljs-props","goog/DEBUG","G__34094","app.connect.NRR-2-60.settings/actuator-type-init-value","actuator-type","refx.alpha/use-sub","app.shared.components.form/field-row","app.shared.components.form/select","p1__34080#","refx.alpha/dispatch","G__34096","vec__34097","G__34108","app.connect.NRR-2-60.settings/settings-form","G__34110","vec__34111","G__34120","app.connect.NRR-2-60.settings/NRR-2-60-settings","show-settings","show-settings-form-sim-start-values","and__5043__auto__","app.shared.components.modal/settings","G__34086","G__34087","obj34089","G__34090","G__34091","obj34093","helix.core/jsx","G__34100","helix.core/Fragment","G__34101","G__34106","G__34107","helix.core/jsxs","G__34114","G__34115","obj34117","G__34118","G__34119","G__34102","G__34103","obj34105"],"sourcesContent":["(ns app.connect.NRR-2-60.settings\n  (:require [helix.core :refer [defnc $ <>]]\n            [helix.dom :as d]\n            [refx.alpha :refer [use-sub dispatch]]\n            [app.shared.components.modal :as modal]\n            [app.shared.components.form :as f]))\n\n(defnc actuator-type-init-value []\n  (let [actuator-type (use-sub [:kit-data-by-keywords [:level :controllers \"NRR 2-60\" :actuator-type]])]\n    ($ f/field-row {:label \"FEEDWATER ACTUATOR\"}\n       ($ f/select {:data      [{:value \"ELECTRIC_VALVE\" :label \"Electric Valve\"}]\n                    :value     actuator-type\n                    :on-change #(dispatch [:change-NRR-2-60 [[:actuator-type] %]])}))))\n\n(defnc settings-form []\n  (<>\n    (d/div {:class \"divider\"} \"simulation start values\")\n    ($ actuator-type-init-value)))\n\n(defnc NRR-2-60-settings []\n  (let [show-settings (use-sub [:kit-data-by-keywords [:level :controllers \"NRR 2-60\" :settings-view]])\n        show-settings-form-sim-start-values (use-sub [:show-settings-form-sim-start-values])]\n    (when (and show-settings show-settings-form-sim-start-values)\n      ($ modal/settings {:title      \"NRR 2-60 Settings\"\n                         :on-default #(dispatch [:restore-defaults-NRR-2-60-settings])\n                         :on-done    #(dispatch [:apply-NRR-2-60-settings])}\n\n         ($ settings-form)))))\n"]}