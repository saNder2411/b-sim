{"version":3,"sources":["app/db/boiler_plant/actuators/feed/electric_valve/events.cljs"],"mappings":";AAIA,sDAAA,tDAACA,oJACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,uFAAA,sEAAA,gEAAA,sDAAA,hUAACK,gIAAMN,+QAAoDG,MAAMC;;AAE9F,sDAAA,tDAACb,6LACa,WAAAgB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAd,4BAAAc;SAAAA,LAAsBR;UAAtB,AAAAL,4CAAAa,eAAA,jEAAaT;IAAbU,aAAAF;QAAA,AAAAV,4CAAAY,WAAA,IAAA,/DAA2BR;YAA3B,AAAAJ,4CAAAY,WAAA,IAAA,nEAA6BN;AAA7B,AACE,IAAMO,OAAK,kDAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,+DAAA,3cAACC,+CAAOX,sFAAID;IACjBa,kBAAgB,iBAAAC,WAAQV;AAAR,AAAA,GACQ,kDAAA,lDAACW,6CAAEJ;AAAY,QAAAG,WAAA;;AADvBA;;;AADtB,AAGE,6BAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,+DAAA,/aAACT,mBAASJ,sFAAID,+XAAoEa;;AAEpG,sDAAA,tDAACtB,kKACa,WAAAyB,SAA0Bd;AAA1B,AAAA,IAAAe,aAAAD;IAAAC,iBAAA,AAAAtB,4BAAAsB;SAAAA,LAAsBhB;UAAtB,AAAAL,4CAAAqB,eAAA,jEAAajB;AAAb,AACE,IAAAkB,aAAgD,kDAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,5YAACN,+CAAOX,sFAAID;IAA5DkB,iBAAA,AAAAvB,4BAAAuB;aAAA,AAAAtB,4CAAAsB,eAAA,pEAAcC;iBAAd,AAAAvB,4CAAAsB,eAAA,xEAAqBE;oBAArB,AAAAxB,4CAAAsB,eAAA,3EAAgCG;AAAhC,gLACMpB,lDACA,qDAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,/YAACqB,wIAAWtB,uUAA4DuB,gBAAMJ,jhBAC9E,yhBAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,n3BAACG,4mBAAWtB,+UAAgEuB,gBAAMH,7/BAClF,ygCAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,n2CAACE,4lCAAWtB,sVAAmEuB,gBAAMF,59CACrF,2+CAAA,uFAAA,sEAAA,gEAAA,sDAAA,uEAAA,+EAAA,74DAAChB,ujDAAUL;;AAEjC,sDAAA,tDAACT,yLACa,WAAAiC,SAA0BtB;AAA1B,AAAA,IAAAuB,aAAAD;IAAAC,iBAAA,AAAA9B,4BAAA8B;SAAAA,LAAsBxB;UAAtB,AAAAL,4CAAA6B,eAAA,jEAAazB;AAAb,AACE,IAAM0B,iBAAe,gJAAA,2CAAA,uEAAA,lQAACC,uGAAMC;AAA5B,AACE,6BAAA,uFAAA,sEAAA,gEAAA,sDAAA,zSAACvB,mBAASJ,sFAAID,+QAAoD0B","names":["refx.alpha.reg_event_db","p__43533","p__43534","map__43618","cljs.core/--destructure-map","cljs.core.get","vec__43620","cljs.core.nth","vec__43623","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","p__43668","p__43669","map__43677","vec__43678","unit","cljs.core.get_in","converted-value","G__43694","cljs.core._EQ_","p__43706","map__43709","map__43713","damper","transition","potentiometer","cljs.core.update_in","cljs.core/merge","p__43721","map__43723","default-values","cljs.core.merge","app.db.defaults/FEEDWATER-VALVE-ELECTRIC"],"sourcesContent":["(ns app.db.boiler-plant.actuators.feed.electric-valve.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :feed-electric-valve/change\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [kit :boiler-plant :actuators :feed :electric-valve] path) value)))\n\n(reg-event-db :feed-electric-valve/change-flow-rate-max-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [unit (get-in db [kit :boiler-plant :actuators :feed :electric-valve :flow-rate :unit])\n                      converted-value (cond-> value\n                                              (= unit \"T/h\") (* 1.016260162601626))]\n                  (assoc-in db [kit :boiler-plant :actuators :feed :electric-valve :flow-rate :max] converted-value))))\n\n(reg-event-db :feed-electric-valve/apply-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [{:keys [damper transition potentiometer]} (get-in db [kit :boiler-plant :actuators :feed :electric-valve :init-sim-output])]\n                  (-> db\n                      (update-in [kit :boiler-plant :actuators :feed :electric-valve :damper] merge damper)\n                      (update-in [kit :boiler-plant :actuators :feed :electric-valve :transition] merge transition)\n                      (update-in [kit :boiler-plant :actuators :feed :electric-valve :potentiometer] merge potentiometer)\n                      (assoc-in [kit :boiler-plant :actuators :feed :electric-valve :settings-view] false)))))\n\n(reg-event-db :feed-electric-valve/restore-defaults-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [default-values (merge defaults/FEEDWATER-VALVE-ELECTRIC {:settings-view true})]\n                  (assoc-in db [kit :boiler-plant :actuators :feed :electric-valve] default-values))))\n"]}