{"version":3,"sources":["app/db/feedwater_valve/subs.cljs"],"mappings":";AAIA,iDAAA,jDAACA,4HACQ,WAAAC,SAA0BM;AAA1B,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBI;UAAtB,AAAAF,4CAAAF,eAAA,jEAAaG;AAAb,AACE,yDAAA,wIAAA,1LAACG,+CAAOF,sFAAI,AAACG,gDAAQJ;;AAEhC,mBAAA,wIAAA,gDAAA,mFAAA,9RAACK,iXAEQ,WAAKC,gBAAgBJ;AAArB,AACE,IAAAK,aAA+B,AAAA,6FAAYD;IAA3CC,iBAAA,AAAAT,4BAAAS;WAAA,AAAAR,4CAAAQ,eAAA,lEAAcC;gBAAd,AAAAT,4CAAAQ,eAAA,vEAAmBE;AAAnB,AACE,IAAAC,WAAQD;IAARC,eAAA,0NAAAA,xNACQ,kDAAA,lDAACC,6CAAEH,aAAY,oIAAK,CAAA,QAAAE,lIAAU,2DAAA,KAAA,hEAACE,XAAsBC;AAD7D,AAAA,GAEQ,kDAAA,lDAACF,6CAAEH;AAAY,kBAAK,2DAAA,KAAA,yDAAAE,zHAACE,XAAsBC;;AAFnDH;;;AAIb,mBAAA,oIAAA,gDAAA,mFAAA,1RAACL,6WAEQ,WAAKC,gBAAgBJ;AAArB,AACE,IAAAY,aAA2B,AAAA,mGAAA,AAAA,4FAAIR;IAA/BQ,iBAAA,AAAAhB,4BAAAgB;WAAA,AAAAf,4CAAAe,eAAA,lEAAcN;YAAd,AAAAT,4CAAAe,eAAA,nEAAmBC;AAAnB,AACE,IAAAC,WAAQD;IAARC,eAAA,yFAAAA,vFACQ,kDAAA,lDAACL,6CAAEH,aAAY,WAAI,CAAAQ,WAAA,vBAAQC;AADnC,AAAA,AAAA,kBAAAD,XAEiBC;;;AAE9B,mBAAA,iHAAA,gDAAA,mFAAA,vQAACZ,yVAEQ,WAAKa,gBAAgBhB;AAArB,AACE,oEAAA,7DAACS,6CAAEO","names":["refx.alpha.reg_sub","p__69479","map__69480","cljs.core/--destructure-map","cljs.core.get","kit","db","_","cljs.core.get_in","cljs.core.keyword","refx.alpha/reg-sub","feedwater-valve","map__69481","unit","max-value","G__69482","cljs.core._EQ_","cljs.pprint.cl_format","js/parseFloat","map__69483","value","G__69484","Math/round","current-hotspot"],"sourcesContent":["(ns app.db.feedwater-valve.subs\n  (:require [refx.alpha :refer [reg-sub]]\n            [cljs.pprint :refer [cl-format]]))\n\n(reg-sub :feedwater-valve\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [(keyword kit) :feedwater-valve])))\n\n(reg-sub :feedwater-valve-flow-rate-max-converted-value\n         :<- [:feedwater-valve]\n         (fn [feedwater-valve _]\n           (let [{:keys [unit max-value]} (:flow-rate feedwater-valve)]\n             (cond-> max-value\n                     (= unit \"T/h\") (->> (* 0.984) (cl-format nil \"~,2f\") js/parseFloat)\n                     (= unit \"t/h\") (->> (cl-format nil \"~,2f\") js/parseFloat)))))\n\n(reg-sub :feedwater-valve-conductivity-converted-value\n         :<- [:feedwater-valve]\n         (fn [feedwater-valve _]\n           (let [{:keys [unit value]} (-> feedwater-valve :feedwater :conductivity)]\n             (cond-> value\n                     (= unit \"ppm\") (-> (* 0.5) Math/round)\n                     :default Math/round))))\n\n(reg-sub :feedwater-valve-show-toolbar-panel\n         :<- [:current-hotspot]\n         (fn [current-hotspot _]\n           (= current-hotspot \"feedwater-valve\")))\n\n\n"]}