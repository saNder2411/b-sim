{"version":3,"sources":["app/db/feedwater/events.cljs"],"mappings":";AAIA,sDAAA,tDAACA,mIACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,wIAAA,rLAACK,gIAAM,AAACC,gDAAQP,2EAAiBG,MAAMC;;AAEpE,sDAAA,tDAACb,yKACa,WAAAiB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAf,4BAAAe;SAAAA,LAAsBT;UAAtB,AAAAL,4CAAAc,eAAA,jEAAaV;IAAbW,aAAAF;QAAA,AAAAX,4CAAAa,WAAA,IAAA,/DAA2BT;YAA3B,AAAAJ,4CAAAa,WAAA,IAAA,nEAA6BP;AAA7B,AACE,IAAMQ,SAAO,AAACL,gDAAQP;IAChBa,OAAK,kDAAA,0FAAA,8DAAA,qEAAA,/QAACC,+CAAOb,sFAAIW;IACjBG,kBAAgB,iBAAAC,WAAQZ;AAAR,AAAA,GACQ,kDAAA,lDAACa,6CAAEJ;AAAY,QAAAG,WAAA;;AADvBA;;;AAFtB,AAIE,6BAAA,0FAAA,8DAAA,qEAAA,nPAACX,mBAASJ,sFAAIW,wMAAwCG;;AAExE,sDAAA,tDAACxB,kJACa,WAAA2B,SAA0BhB;AAA1B,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAAxB,4BAAAwB;SAAAA,LAAsBlB;UAAtB,AAAAL,4CAAAuB,eAAA,jEAAanB;AAAb,AACE,IAAMY,SAAO,AAACL,gDAAQP;AAAtB,AACE,6BAAA,0FAAA,8DAAA,+EAAA,7PAACK,mBAASJ,sFAAIW;;AAEhC,sDAAA,tDAACrB,yKACa,WAAA6B,SAA0BlB;AAA1B,AAAA,IAAAmB,aAAAD;IAAAC,iBAAA,AAAA1B,4BAAA0B;SAAAA,LAAsBpB;UAAtB,AAAAL,4CAAAyB,eAAA,jEAAarB;AAAb,AACE,IAAMY,SAAO,AAACL,gDAAQP;IAChBsB,iBAAe,iIAAA,2CAAA,uEAAA,nPAACC,uGAAMC;AAD5B,AAEE,6BAAA,0FAAA,hHAACnB,mBAASJ,sFAAIW,6EAAmBU","names":["refx.alpha.reg_event_db","p__82768","p__82769","map__82776","cljs.core/--destructure-map","cljs.core.get","vec__82777","cljs.core.nth","vec__82780","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","cljs.core.keyword","p__82831","p__82832","map__82835","vec__82836","kit-kw","unit","cljs.core.get_in","converted-value","G__82851","cljs.core._EQ_","p__82879","map__82881","p__82890","map__82892","default-values","cljs.core.merge","app.db.defaults/FEEDWATER"],"sourcesContent":["(ns app.db.feedwater.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-feedwater\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [(keyword kit) :feedwater] path) value)))\n\n(reg-event-db :change-feedwater-conductivity-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :feedwater :conductivity :unit])\n                      converted-value (cond-> value\n                                              (= unit \"ppm\") (* 2))]\n                  (assoc-in db [kit-kw :feedwater :conductivity :value] converted-value))))\n\n(reg-event-db :apply-feedwater-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)]\n                  (assoc-in db [kit-kw :feedwater :settings-view] false))))\n\n(reg-event-db :restore-defaults-feedwater-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      default-values (merge defaults/FEEDWATER {:settings-view true})]\n                  (assoc-in db [kit-kw :feedwater] default-values))))\n"]}