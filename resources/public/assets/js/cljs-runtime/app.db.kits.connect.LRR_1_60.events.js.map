{"version":3,"sources":["app/db/kits/connect/LRR_1_60/events.cljs"],"mappings":";AAGA,sDAAA,tDAACA,iIACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,uFAAA,oDAAA,oEAAA,5PAACK,gIAAMN,+IAAmCG,MAAMC","names":["refx.alpha.reg_event_db","p__36991","p__36992","map__36994","cljs.core/--destructure-map","cljs.core.get","vec__36995","cljs.core.nth","vec__36998","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into"],"sourcesContent":["(ns app.db.kits.connect.LRR-1-60.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]))\n\n(reg-event-db :change-LRR-1-60\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [kit :cond :controllers \"LRR 1-60\"] path) value)))\n"]}