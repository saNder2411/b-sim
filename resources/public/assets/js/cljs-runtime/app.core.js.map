{"version":3,"sources":["app/core.cljs"],"mappings":";;AASA,yBAAA,mFAAA,5GAACA;AAED,kBAAA,lBAAMC;AAAN,AACE,IAAMC,OAAK,AAACC,gDAAqB,oBAAA,pBAACC;AAAlC,AACE,OAASF,wCAAQG,5BA8Dd,iBAAAI;IAAAC,WAAA;AAAA,AAAA,QAAAC,+CAAAA,6CAAAF,SAAAC,YAAAC,yBAAAF,SAAAC;;;AA5DP,wCAAA,xCAAuBJ;AAAvB,AACE,AAACC;;AACD,OAACN;;AAEH,gBAAA,hBAAeO;AAAf,AACE,OAACP","names":["refx.alpha/dispatch-sync","app.core/render","root","js/module$node_modules$react_dom$client.createRoot","goog.dom/getElement","app.views/t-app","app.core/clear-cache-and-render!","refx.alpha/clear-subscription-cache!","app.core/init","G__28439","G__28440","helix.core/jsx"],"sourcesContent":["(ns app.core\n  (:require [goog.dom :as g-dom]\n            [\"react-dom/client\" :as react-dom]\n            [helix.core :refer [$]]\n            [refx.alpha :as refx]\n            [app.events]\n            [app.subs]\n            [app.views :as views]))\n\n(refx/dispatch-sync [:initialise-db])\n\n(defn render []\n  (let [root (react-dom/createRoot (g-dom/getElement \"app\"))]\n    (.render root ($ views/t-app))))\n\n(defn ^:dev/after-load clear-cache-and-render! []\n  (refx/clear-subscription-cache!)\n  (render))\n\n(defn ^:export init []\n  (render))\n"]}