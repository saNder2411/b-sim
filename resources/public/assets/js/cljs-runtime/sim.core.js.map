{"version":3,"sources":["sim/core.cljs"],"mappings":";AAGA,AAAKA,sBAAW,6CAAA,2CAAA,oDAAA,MAAA,yDAAA,3MAACC;AAGjB,oBAAA,pBAAMC,gDAAUC;AAAhB,AACE,IAAAC,mBAAA,AAAAC,mDAAA;AAAA,AAAA,AAAAC,kCAAA;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA,WAAAC;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,AAAA,IAAAE,uBAAAF;AAAA,AAAA,CAAAE,qBAAA,OAAA;;AAAA,CAAAA,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAD,oBAAA;AAAA,IAAAE,aAAA,AAAAC,gBACiBV;IADjBW,aAAA,AAAA,kFAAAF;IAAAH,kBAAAA;AAAA,AAAA,AAAA,oBAAAK;AAAA,IAAAC,uBAAAN;AAAA,AAAA,CAAAM,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAAP;AAAA,AAAA,CAAAO,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAN,oBAAA;AAAA,IAAAO,aAAA,CAAAR,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAS,6CAAAT,gBAAAQ;;AAAA,GAAA,CAAAP,oBAAA;AAAA,IAAAS,aAAA,4EAAA,5EAEK4B,mDAAM5C,QAAI6C,0EAAeC;IAF9B7B,aAAA,AAAAP,gBAGgCV;IAHhCkB,aAAA,AAAA,uFAAAD;IAAAE,aAAA,yGAAA,SAAAD,lHAGK6B;IAHL3B,aAAA,wBAAA,xBAIS4B;IAJT1C,kBAAA,iBAAAe,iBAAAf;AAAA,AAAA,CAAAe,eAAA,OAAAL;;AAAA,CAAAK,eAAA,OAAAF;;AAAAE;;AAAA,AAAA,OAAAC,4CAAAhB,gBAAA,IAAAc;;AAAA,GAAA,CAAAb,oBAAA;AAAA,IAAAD,kBAAAA;AAAA,AAAA,AAAA,IAAAiB,uBAAAjB;AAAA,AAAA,CAAAiB,qBAAA,OAAA;;AAAA,CAAAA,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAhB,oBAAA;AAAA,IAAAiB,aAAA,CAAAlB,YAAA;IAAAA,kBAAAA;AAAA,AAAA,AAAA,IAAAmB,uBAAAnB;AAAA,AAAA,CAAAmB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAlB,oBAAA;AAAA,IAAAmB,aAAA,CAAApB,YAAA;IAAAA,kBAAA,iBAAAqB,iBAAArB;AAAA,AAAA,CAAAqB,eAAA,OAAAD;;AAAAC;;AAAA,AAAA,AAAA,IAAAC,uBAAAtB;AAAA,AAAA,CAAAsB,qBAAA,OAAA;;AAAA,CAAAA,qBAAA,OAAA;;AAAAA;AAAA;;AAAA;;;;;;;;;AAAA,AAAA;;;AAAA,AAAA,IAAAC,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAC;;AAAA,CAAAD,eAAA,OAAA;;AAAAA;;qEAAAvB;;AAAA,AAAA,IAAAyB,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAA3B,sBAAAC;AAAA,AAAA,GAAA,AAAA2B,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,IAAAE,oBAAAC;AAAA,AAAA,IAAAC,uBAAA9B;AAAA,AAAA,CAAA8B,qBAAA,OAAAF;;AAAAE;AAAA,GAAA,AAAAC,cAAA,CAAA/B,YAAA;AAAA,IAAAgC,uBAAAhC;AAAA,AAAA,CAAAgC,qBAAA,OAAA,AAAAC,gBAAA,CAAAjC,YAAA;;AAAAgC;AAAA,MAAAJ;;;AAAA;;AAAA,AAAA,GAAA,AAAAD,mCAAAF,yBAAA;AAAA,eAAAzB;;;;AAAAyB;;;;;4DAAAzB;;;;;qEAAAA;;;;;;;;;IAAAkC,uBAAA,iBAAAC,iBAAA,AAAArC;AAAA,AAAA,CAAAqC,eAAAC,AAAA,OAAAzC;;AAAAwC;;AAAA,AAAA,OAAAE,2DAAAH;;;AAAAvC;;AAMF,mBAAA,nBAAMgD;AAAN,AACE,uFAAA,oDAAA,3IAACL,mDAAM/C,oBAAWqD;;AAClB,OAACnD,kBAASF;;AAEZ,oBAAA,pBAAMsD;AAAN,AACE,8FAAA,oDAAA,3IAACP,mDAAM/C,oBAAWqD;;AAEpB,qBAAA,rBAAME;AAAN,AACE,iDAAA,2CAAA,oDAAA,MAAA,yDAAA,xMAACC,sBAAOxD","names":["sim.core/simulation","cljs.core.atom","sim.core/sim-loop","sim","c__27896__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__27897__auto__","switch__27290__auto__","state_35931","state_val_35932","statearr-35938","inst_35910","cljs.core/deref","inst_35911","statearr-35939","statearr-35940","inst_35929","cljs.core.async.impl.ioc-helpers/return-chan","inst_35913","inst_35918","inst_35919","inst_35920","inst_35921","statearr-35947","cljs.core.async.impl.ioc-helpers/take!","statearr-35948","inst_35927","statearr-35953","inst_35923","statearr-35954","statearr-35955","statearr-35957","state-machine__27291__auto__","ret-value__27292__auto__","result__27293__auto__","cljs.core/keyword-identical?","ex__27294__auto__","e35959","statearr-35961","cljs.core/seq","statearr-35963","cljs.core/first","state__27898__auto__","statearr-35968","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.swap_BANG_","cljs.core/update","cljs.core/inc","cljs.core.println","cljs.core.async/timeout","sim.core/run-sim","cljs.core/assoc","sim.core/stop-sim","sim.core/reset-sim","cljs.core/reset!"],"sourcesContent":["(ns sim.core\n  (:require [cljs.core.async :refer [<! timeout go]]))\n\n(def simulation (atom {:run?   false\n                       :loop-n 0}))\n\n(defn sim-loop [sim]\n  (go\n    (while (:run? @sim)\n      (swap! sim update :loop-n inc)\n      (println \"loop #\" (:loop-n @sim))\n      (<! (timeout 1000)))))\n\n(defn run-sim []\n  (swap! simulation assoc :run? true)\n  (sim-loop simulation))\n\n(defn stop-sim []\n  (swap! simulation assoc :run? false))\n\n(defn reset-sim []\n  (reset! simulation {:run? false :loop-n 0}))\n"]}