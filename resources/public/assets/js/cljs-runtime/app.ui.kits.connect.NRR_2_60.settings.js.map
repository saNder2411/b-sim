{"version":3,"sources":["app/ui/kits/connect/NRR_2_60/settings.cljs"],"mappings":";AAOA,AAAA;AAAA,iEAAA,iBAAAA,WAAA,gFAAAC,qBAAAC,lMAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAMM,gBAAc,mBAAA,mFAAA,8EAAA,mFAAA,uDAAA,oEAAA,WAAA,7YAACC;AAArB,eACKC,fAkEA,IAAAkB;iHAjEGjB,7GAiEHkB,WAAA,iBAAAC,WAAA,EAAA,QAAA,qBAAA,WAAA,iBAAAC;yVAhEwB,AAACnB,eAAKJ,pWAgE9BwB,WAAA,iBAAAC,WAAA,EAAA,OAAA,mFAAA,2CAAA,sDAAA,iBAAA,uDAAA,iCAAA,sCAAA,YAAA,WAAAnB;AA/DyB,2BAAA,mFAAA,2EAAA,mFAAA,mFAAA,xVAACD,uaAA6C,gDAAAC,hDAACC,9aA+DxE;;AAAA,AAAAkB;;AAAA,AAAA,QAAAC,+CAAAA,6CAAAH,SAAAC,YAAAE,yBAAAH,SAAAC;;AAAA,AAAAF;;AAAA,AAAA,QAAAI,+CAAAA,6CAAAN,SAAAC,YAAAK,yBAAAN,SAAAC;;AApEP,AAAA,GAAA,AAAAxB;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO,AAOP,AAAA;AAAA,sDAAA,iBAAAS,WAAA,qEAAAf,qBAAAC,5KAAOiB;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAAb,8BAAAH,sBAAAC;AAAA,AAAA;AA6DO,IAAAiC,WAAAC;IAAAC,WAAA,cAAA,CAyGA,iBAAAS,WAAA;IAAAC,WAAA,iBAAAC,WAAA,EAAA,YAAA,UAAA,QAAA,iBAAAC,WAAA,EAAA,YAAA,AAAAC,yBAAA;AAAA,AAAAD;KAAA,WAAA;AAAA,AAAAD;;AAAA,AAAA,QAAAd,+CAAAA,6CAAAY,SAAAC,YAAAb,yBAAAY,SAAAC;iCAnKAxC,5BA0DA,iBAAA+B;IAAAC,WAAA;AAAA,AAAA,QAAAL,+CAAAA,6CAAAI,SAAAC,YAAAL,yBAAAI,SAAAC;;AAAA,AAAA,QAAAC,gDAAAA,8CAAAL,SAAAE,YAAAG,0BAAAL,SAAAE;;AA7DP,AAAA,GAAA,AAAAhC;AAAA,IAAAa,WAAAF;AAAA,AAAA,CAAA,AAAAE,uBAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG,AAKP,AAAA;AAAA,0DAAA,iBAAAC,WAAA,yEAAAnB,qBAAAC,pLAAOqB;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAAjB,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAMsB,gBAAc,mBAAA,mFAAA,8EAAA,mFAAA,uDAAA,oEAAA,WAAA,7YAACf;IACfgB,sCAAoC,mBAAA,mFAAA,tGAAChB;AAD3C,AAEE,oBAAM,iBAAAiB,oBAAKF;AAAL,AAAA,oBAAAE;AAAmBD;;AAAnBC;;;AAAN,eACKC,fAoDF,IAAAc;IAAAC,WAAA,iBAAAC,WAAA,EAAA,QAAA,oBAAA,aAAA;AAnD+B,2BAAA,mFAAA,vGAAC9B,PAmDhC;GAAA,UAAA;AAlD+B,2BAAA,mFAAA,vGAACA,PAkDhC;0CAhDKM,vCAgDL,WAAA,iBAAAyB;IAAAC,WAAA;AAAA,AAAA,QAAAX,+CAAAA,6CAAAU,SAAAC,YAAAX,yBAAAU,SAAAC;;AAAA,AAAAF;;AAAA,AAAA,QAAAT,+CAAAA,6CAAAO,SAAAC,YAAAR,yBAAAO,SAAAC;;AArDH;;;AAHJ,AAAA,GAAA,AAAArC;AAAA,IAAAiB,WAAAF;AAAA,AAAA,CAAA,AAAAE,uBAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG","names":["G__35583","props__27584__auto__","maybe-ref__27585__auto__","vec__35592","helix.core/extract-cljs-props","goog/DEBUG","G__35621","app.ui.kits.connect.NRR-2-60.settings/actuator-type-init-value","actuator-type","refx.alpha/use-sub","app.ui.shared.components.form/field-row","app.ui.shared.components.form/select","cljs.core/name","refx.alpha/dispatch","p1__35577#","cljs.core.keyword","G__35624","vec__35626","G__35666","app.ui.kits.connect.NRR-2-60.settings/settings-form","G__35673","vec__35678","G__35702","app.ui.kits.connect.NRR-2-60.settings/NRR-2-60-settings","show-settings","show-settings-form-sim-start-values","and__5043__auto__","app.ui.shared.components.modal/settings","G__35599","G__35600","obj35606","G__35611","G__35612","obj35618","helix.core/jsx","G__35633","helix.core/Fragment","G__35634","G__35657","G__35658","helix.core/jsxs","G__35683","G__35685","obj35692","G__35694","G__35696","G__35637","G__35638","obj35643","obj35647","helix.impl.props/->js"],"sourcesContent":["(ns app.ui.kits.connect.NRR-2-60.settings\n  (:require [helix.core :refer [defnc $ <>]]\n            [helix.dom :as d]\n            [refx.alpha :refer [use-sub dispatch]]\n            [app.ui.shared.components.modal :as modal]\n            [app.ui.shared.components.form :as f]))\n\n(defnc actuator-type-init-value []\n  (let [actuator-type (use-sub [:kit-data-by-path [:level :controllers \"NRR 2-60\" :actuator-type]])]\n    ($ f/field-row {:label \"FEEDWATER ACTUATOR\"}\n       ($ f/select {:data      [{:value \"electric-valve\" :label \"Electric Valve\"}]\n                    :value     (name actuator-type)\n                    :on-change #(dispatch [:change-NRR-2-60 [[:actuator-type] (keyword %)]])}))))\n\n(defnc settings-form []\n  (<>\n    (d/div {:class \"divider\" :style {:margin-top 0}} \"specifications\")\n    ($ actuator-type-init-value)))\n\n(defnc NRR-2-60-settings []\n  (let [show-settings (use-sub [:kit-data-by-path [:level :controllers \"NRR 2-60\" :settings-view]])\n        show-settings-form-sim-start-values (use-sub [:show-settings-form-sim-start-values])]\n    (when (and show-settings show-settings-form-sim-start-values)\n      ($ modal/settings {:title      \"NRR 2-60 Settings\"\n                         :on-default #(dispatch [:restore-defaults-NRR-2-60-settings])\n                         :on-done    #(dispatch [:apply-NRR-2-60-settings])}\n\n         ($ settings-form)))))\n"]}