{"version":3,"sources":["app/db/boiler_plant/continuous_valve/events.cljs"],"mappings":";AAIA,sDAAA,tDAACA,gJACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,wIAAA,rLAACK,gIAAM,AAACC,gDAAQP,0FAAwBG,MAAMC;;AAG3E,sDAAA,tDAACb,wLACa,WAAAiB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAf,4BAAAe;SAAAA,LAAsBT;UAAtB,AAAAL,4CAAAc,eAAA,jEAAaV;IAAbW,aAAAF;QAAA,AAAAX,4CAAAa,WAAA,IAAA,/DAA2BT;YAA3B,AAAAJ,4CAAAa,WAAA,IAAA,nEAA6BP;AAA7B,AACE,IAAMQ,SAAO,AAACL,gDAAQP;IAChBa,OAAK,kDAAA,0FAAA,6EAAA,+DAAA,xRAACC,+CAAOb,sFAAIW;IACjBG,kBAAgB,iBAAAC,WAAQZ;AAAR,AAAA,GACQ,kDAAA,lDAACa,6CAAEJ;AAAY,QAAAG,WAAA;;AADvBA;;;AAFtB,AAIE,6BAAA,0FAAA,6EAAA,+DAAA,5PAACX,mBAASJ,sFAAIW,yNAAgDG;;AAGhF,sDAAA,tDAACxB,gKACa,WAAA2B,SAA0BhB;AAA1B,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAAxB,4BAAAwB;SAAAA,LAAsBlB;UAAtB,AAAAL,4CAAAuB,eAAA,jEAAanB;AAAb,AACE,IAAMY,SAAO,AAACL,gDAAQP;IAAtBoB,aACkC,kDAAA,0FAAA,6EAAA,zNAACN,+CAAOb,sFAAIW;IAD9CQ,iBAAA,AAAAzB,4BAAAyB;aAAA,AAAAxB,4CAAAwB,eAAA,pEACcC;iBADd,AAAAzB,4CAAAwB,eAAA,xEACqBE;AADrB,8HAEMrB,lDACA,qDAAA,0FAAA,6EAAA,5NAACsB,wIAAWX,oJAAkCY,gBAAMH,9VACpD,sWAAA,0FAAA,6EAAA,7gBAACE,ybAAWX,4JAAsCY,gBAAMF,/nBACxD,2oBAAA,0FAAA,6EAAA,+EAAA,13BAACjB,utBAAUO;;AAEjC,sDAAA,tDAACrB,uLACa,WAAAkC,SAA0BvB;AAA1B,AAAA,IAAAwB,aAAAD;IAAAC,iBAAA,AAAA/B,4BAAA+B;SAAAA,LAAsBzB;UAAtB,AAAAL,4CAAA8B,eAAA,jEAAa1B;AAAb,AACE,IAAMY,SAAO,AAACL,gDAAQP;IAChB2B,iBAAe,wIAAA,2CAAA,uEAAA,1PAACC,uGAAMC;AAD5B,AAEE,6BAAA,0FAAA,hHAACxB,mBAASJ,sFAAIW,4FAA0Be","names":["refx.alpha.reg_event_db","p__38514","p__38515","map__38547","cljs.core/--destructure-map","cljs.core.get","vec__38552","cljs.core.nth","vec__38562","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","cljs.core.keyword","p__38587","p__38590","map__38599","vec__38607","kit-kw","unit","cljs.core.get_in","converted-value","G__38628","cljs.core._EQ_","p__38645","map__38650","map__38658","damper","transition","cljs.core.update_in","cljs.core/merge","p__38682","map__38683","default-values","cljs.core.merge","app.db.defaults/CONTINUOUS-VALVE"],"sourcesContent":["(ns app.db.boiler-plant.continuous-valve.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-continuous-valve\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [(keyword kit) :continuous-valve] path) value)))\n\n\n(reg-event-db :change-continuous-valve-flow-rate-max-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :continuous-valve :flow-rate :unit])\n                      converted-value (cond-> value\n                                              (= unit \"T/h\") (* 1.016260162601626))]\n                  (assoc-in db [kit-kw :continuous-valve :flow-rate :max-value] converted-value))))\n\n\n(reg-event-db :apply-continuous-valve-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      {:keys [damper transition]} (get-in db [kit-kw :continuous-valve :init-sim-output])]\n                  (-> db\n                      (update-in [kit-kw :continuous-valve :damper] merge damper)\n                      (update-in [kit-kw :continuous-valve :transition] merge transition)\n                      (assoc-in [kit-kw :continuous-valve :settings-view] false)))))\n\n(reg-event-db :restore-defaults-continuous-valve-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      default-values (merge defaults/CONTINUOUS-VALVE {:settings-view true})]\n                  (assoc-in db [kit-kw :continuous-valve] default-values))))\n"]}