{"version":3,"sources":["app/db/boiler_plant/feedwater/events.cljs"],"mappings":";AAIA,sDAAA,tDAACA,mIACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,uFAAA,sEAAA,1MAACK,gIAAMN,gJAA8BG,MAAMC;;AAExE,sDAAA,tDAACb,yKACa,WAAAgB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAd,4BAAAc;SAAAA,LAAsBR;UAAtB,AAAAL,4CAAAa,eAAA,jEAAaT;IAAbU,aAAAF;QAAA,AAAAV,4CAAAY,WAAA,IAAA,/DAA2BR;YAA3B,AAAAJ,4CAAAY,WAAA,IAAA,nEAA6BN;AAA7B,AACE,IAAMO,OAAK,kDAAA,uFAAA,sEAAA,8DAAA,qEAAA,lVAACC,+CAAOX,sFAAID;IACjBa,kBAAgB,iBAAAC,WAAQV;AAAR,AAAA,GACQ,kDAAA,lDAACW,6CAAEJ;AAAY,QAAAG,WAAA;;AADvBA;;;AADtB,AAGE,6BAAA,uFAAA,sEAAA,8DAAA,qEAAA,tTAACT,mBAASJ,sFAAID,2QAAmDa;;AAEnF,sDAAA,tDAACtB,kJACa,WAAAyB,SAA0Bd;AAA1B,AAAA,IAAAe,aAAAD;IAAAC,iBAAA,AAAAtB,4BAAAsB;SAAAA,LAAsBhB;UAAtB,AAAAL,4CAAAqB,eAAA,jEAAajB;AAAb,AACE,6BAAA,uFAAA,sEAAA,8DAAA,+EAAA,hUAACK,mBAASJ,sFAAID;;AAE9B,sDAAA,tDAACT,yKACa,WAAA2B,SAA0BhB;AAA1B,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAAxB,4BAAAwB;SAAAA,LAAsBlB;UAAtB,AAAAL,4CAAAuB,eAAA,jEAAanB;AAAb,AACE,IAAMoB,iBAAe,iIAAA,2CAAA,uEAAA,nPAACC,uGAAMC;AAA5B,AACE,6BAAA,uFAAA,sEAAA,nLAACjB,mBAASJ,sFAAID,gJAA8BoB","names":["refx.alpha.reg_event_db","p__31312","p__31313","map__31321","cljs.core/--destructure-map","cljs.core.get","vec__31322","cljs.core.nth","vec__31325","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","p__31381","p__31382","map__31397","vec__31398","unit","cljs.core.get_in","converted-value","G__31422","cljs.core._EQ_","p__31453","map__31459","p__31468","map__31469","default-values","cljs.core.merge","app.db.defaults/FEEDWATER"],"sourcesContent":["(ns app.db.boiler-plant.feedwater.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-feedwater\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [kit :boiler-plant :feedwater] path) value)))\n\n(reg-event-db :change-feedwater-conductivity-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [unit (get-in db [kit :boiler-plant :feedwater :conductivity :unit])\n                      converted-value (cond-> value\n                                              (= unit \"ppm\") (* 2))]\n                  (assoc-in db [kit :boiler-plant :feedwater :conductivity :value] converted-value))))\n\n(reg-event-db :apply-feedwater-settings\n              (fn [{:keys [kit] :as db} _]\n                (assoc-in db [kit :boiler-plant :feedwater :settings-view] false)))\n\n(reg-event-db :restore-defaults-feedwater-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [default-values (merge defaults/FEEDWATER {:settings-view true})]\n                  (assoc-in db [kit :boiler-plant :feedwater] default-values))))\n"]}