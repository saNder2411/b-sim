{"version":3,"sources":["app/db/NRR_2_60_3C_subs.cljs"],"mappings":";AAGA,iDAAA,jDAACA,qHACQ,WAAKC,GAAGC;AAAR,AACE,yDAAA,mFAAA,2DAAA,uDAAA,oEAAA,3TAACC,+CAAOF;;AAEnB,kDAAA,lDAAKG;AACL,kDAAA,lDAAKC;AAEL,8CAAA,9CAAKC;AACL,8CAAA,9CAAKC;AACL,8CAAA,9CAAKC;AACL,oDAAA,pDAAKC;AAEL,+CAAA,/CAAMC,sGAAsBC,iBAAiBC;AAA7C,AACE,IAAMC,QAAM,8BAAA,7BAAG,CAAGF,mBAAiBC;AAAnC,AACE,GAAI,CAAGC,QAAMT;AACXA;;AACAS;;;AAEN,mBAAA,0FAAA,gDAAA,mFAAA,hPAACC,4TAEQ,WAAKC,YAAYb;AAAjB,AACE,IAAAc,aAA+D,AAAA,iGAAcD;IAA7EC,iBAAA,AAAAC,4BAAAD;kBAAAA,dAAkDK;0BAAlD,AAAAH,4CAAAF,eAAA,jFAAcG;iBAAd,AAAAD,4CAAAF,eAAA,xEAAkCI;IAC5BE,uBAAqB,AAACZ,6CAAqBS,oBAAoBC;IAC/DG,4BAA0B,CAAGjB,8CAAoB,CAAGgB,uBAAqBb;AAF/E,AAGE,wEAAA,2JAAA,5NAACe,qDAAMH,gGAAkCC,uKACKC;;AAE3D,mBAAA,yHAAA,gDAAA,mFAAA,/QAACT,iXAEQ,WAAKW,IAAIvB;AAAT,AACE,iCAAA,mFAAA,qFAAA,+DAAA,mFAAA,gGAAA,oFAAA,xgBAACwB,sBAAYD;;AAOxB,wDAAA,6FAAA,gDAAA,mFAAA,kFAAA,kGAAA,mFAAA,/hBAACzB,0nBAGQ,WAAA2B,SAA2CzB;AAA3C,AAAA,IAAA0B,aAAAD;sBAAA,AAAAE,4CAAAD,WAAA,IAAA,7EAAME;0BAAN,AAAAD,4CAAAD,WAAA,IAAA,jFAAsBG;AAAtB,AACE,SAAK,6DAAA,7DAACC,6CAAEF,yCAAoC,iEAAA,jEAACE,6CAAED","names":["refx.alpha.reg_sub","db","_","cljs.core.get_in","app.db.NRR-2-60-3C-subs/max-high-point-by-cal-p","app.db.NRR-2-60-3C-subs/min-high-point-by-cal-p","app.db.NRR-2-60-3C-subs/min-level-by-boiler","app.db.NRR-2-60-3C-subs/max-level-by-boiler","app.db.NRR-2-60-3C-subs/max-range-by-boiler","app.db.NRR-2-60-3C-subs/%-in-digital-unit","app.db.NRR-2-60-3C-subs/calc-real-high-point","h-point-by-cal-p","cal-p","value","refx.alpha/reg-sub","NRR-2-60-3C","map__45076","cljs.core/--destructure-map","cljs.core.get","high-point-by-cal-p","next-cal-p","calibration","next-real-high-point","next-high-point-by-boiler","cljs.core.assoc","cal","cljs.core/select-keys","p__45079","vec__45086","cljs.core.nth","current-hotspot","level-controller-id","cljs.core._EQ_"],"sourcesContent":["(ns app.db.NRR-2-60-3C-subs\n  (:require [refx.alpha :refer [reg-sub]]))\n\n(reg-sub :NRR-2-60-3C\n         (fn [db _]\n           (get-in db [:connect :level :controllers \"NRR 2-60 3C\"])))\n\n(def max-high-point-by-cal-p 32767)\n(def min-high-point-by-cal-p 8191.75)\n\n(def min-level-by-boiler 78.21877)                          ;%\n(def max-level-by-boiler 97.86859)\n(def max-range-by-boiler 19.64982)\n(def %-in-digital-unit 0.0005996832179)                     ;; one digital value includes 0.0005996832179 percent; 19.64982 % / 32767 digital units\n\n(defn calc-real-high-point [h-point-by-cal-p cal-p]\n  (let [value (* (/ h-point-by-cal-p cal-p) 100)]\n    (if (> value max-high-point-by-cal-p)\n      max-high-point-by-cal-p\n      value)))\n\n(reg-sub :NRR-2-60-3C-calibration\n         :<- [:NRR-2-60-3C]\n         (fn [NRR-2-60-3C _]\n           (let [{:keys [high-point-by-cal-p next-cal-p] :as calibration} (:calibration NRR-2-60-3C)\n                 next-real-high-point (calc-real-high-point high-point-by-cal-p next-cal-p)\n                 next-high-point-by-boiler (+ min-level-by-boiler (* next-real-high-point %-in-digital-unit))]\n             (assoc calibration :next-real-high-point next-real-high-point\n                                :next-high-point-by-boiler next-high-point-by-boiler))))\n\n(reg-sub :NRR-2-60-3C-calibration-level-cal-view\n         :<- [:NRR-2-60-3C-calibration]\n         (fn [cal _]\n           (select-keys cal [:high-point-by-boiler\n                             :low-point\n                             :low-point-by-boiler\n                             :next-high-point-by-boiler\n                             :next-real-high-point\n                             :real-high-point])))\n\n(reg-sub :NRR-2-60-3C-show-toolbar\n         :<- [:current-hotspot]\n         :<- [:level-controller-id]\n         (fn [[current-hotspot level-controller-id] _]\n           (and (= current-hotspot \"level-controller\") (= level-controller-id \"NRR 2-60 3C\"))))\n\n"]}