{"version":3,"sources":["app/db/boiler/events.cljs"],"mappings":"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","names":["refx.alpha.reg_event_db","p__27679","p__27680","map__27716","cljs.core/--destructure-map","cljs.core.get","vec__27730","cljs.core.nth","vec__27736","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","cljs.core.keyword","p__27795","p__27796","map__27803","vec__27808","kit-kw","unit","cljs.core.get_in","converted-value","G__27857","cljs.core._EQ_","p__27873","p__27874","map__27883","vec__27885","G__27899","p__27911","p__27912","map__27913","vec__27914","G__27925","p__27928","p__27929","map__27931","vec__27932","G__27937","p__27944","map__27945","map__27948","water-level","pressure","conductivity","temperature","sludge-mass","cljs.core.update_in","cljs.core/merge","p__27959","map__27961","default-values","cljs.core.merge","app.db.defaults/BOILER"],"sourcesContent":["(ns app.db.boiler.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-boiler\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [(keyword kit) :boiler] path) value)))\n\n(reg-event-db :change-boiler-pressure-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :boiler :pressure :unit])\n                      converted-value (cond-> value\n                                              (= unit \"psi\") (* 0.06894744825494))]\n                  (assoc-in db [kit-kw :boiler :pressure :value] converted-value))))\n\n(reg-event-db :change-boiler-init-sim-output-pressure-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :boiler :pressure :unit])\n                      converted-value (cond-> value\n                                              (= unit \"psi\") (* 0.06894744825494))]\n                  (assoc-in db [kit-kw :boiler :init-sim-output :pressure :value] converted-value))))\n\n(reg-event-db :change-boiler-conductivity-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :boiler :conductivity :unit])\n                      converted-value (cond-> value\n                                              (= unit \"ppm\") (* 2))]\n                  (assoc-in db [kit-kw :boiler :conductivity :value] converted-value))))\n\n(reg-event-db :change-boiler-init-sim-output-conductivity-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :boiler :conductivity :unit])\n                      converted-value (cond-> value\n                                              (= unit \"ppm\") (* 2))]\n                  (assoc-in db [kit-kw :boiler :init-sim-output :conductivity :value] converted-value))))\n\n(reg-event-db :apply-boiler-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      {:keys [water-level pressure conductivity temperature sludge-mass]} (get-in db [kit-kw :boiler :init-sim-output])]\n\n                  (-> db\n                      (update-in [kit-kw :boiler :water-level] merge water-level)\n                      (update-in [kit-kw :boiler :pressure] merge pressure)\n                      (assoc-in [kit-kw :boiler :pressure :prev-value] (:value pressure))\n                      (update-in [kit-kw :boiler :conductivity] merge conductivity)\n                      (update-in [kit-kw :boiler :temperature] merge temperature)\n                      (update-in [kit-kw :boiler :sludge-mass] merge sludge-mass)\n                      (assoc-in [kit-kw :boiler :settings-view] false)))))\n\n(reg-event-db :restore-defaults-boiler-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      default-values (merge defaults/BOILER {:settings-view true})]\n\n                  (assoc-in db [kit-kw :boiler] default-values))))\n"]}