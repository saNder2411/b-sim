{"version":3,"sources":["app/db/burner/events.cljs"],"mappings":"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","names":["refx.alpha.reg_event_db","p__82802","p__82803","map__82824","cljs.core/--destructure-map","cljs.core.get","vec__82825","cljs.core.nth","vec__82828","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","cljs.core.keyword","p__82858","p__82859","map__82872","vec__82873","vec__82876","v-key","kit-kw","unit","cljs.core.get_in","converted-value","G__82888","cljs.core._EQ_","p__82903","p__82904","map__82908","vec__82909","G__82916","p__82924","p__82925","map__82926","vec__82928","G__82933","p__82940","map__82941","map__82943","status","cljs.core.update_in","cljs.core/merge","p__82946","map__82948","default-values","cljs.core.merge","app.db.defaults/BURNER"],"sourcesContent":["(ns app.db.burner.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-burner\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [(keyword kit) :burner] path) value)))\n\n(reg-event-db :change-burner-pressure-value\n              (fn [{:keys [kit] :as db} [_ [v-key value]]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :burner :pressure :unit])\n                      converted-value (cond-> value\n                                              (= unit \"psi\") (* 0.06894744825494))]\n                  (assoc-in db [kit-kw :burner :pressure :value v-key] converted-value))))\n\n(reg-event-db :change-burner-power-max-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :burner :power :unit])\n                      converted-value (cond-> value\n                                              (= unit \"MW\") (* 1000))]\n                  (assoc-in db [kit-kw :burner :power :max-value] converted-value))))\n\n(reg-event-db :change-burner-fuel-consumption-coeff-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :burner :fuel-consumption :coeff :unit])\n                      converted-value (cond-> value\n                                              (= unit \"nm\u00b3/kW*s\") (* 0.00027777777))]\n                  (assoc-in db [kit-kw :burner :fuel-consumption :coeff :value] converted-value))))\n\n\n(reg-event-db :apply-burner-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      {:keys [status]} (get-in db [kit-kw :burner :init-sim-output])]\n\n                  (-> db\n                      (update-in [kit-kw :burner :status] merge status)\n                      (assoc-in [kit-kw :burner :settings-view] false)))))\n\n(reg-event-db :restore-defaults-burner-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      default-values (merge defaults/BURNER {:settings-view true})]\n\n                  (assoc-in db [kit-kw :burner] default-values))))\n"]}