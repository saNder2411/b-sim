{"version":3,"sources":["app/app.cljs"],"mappings":";AAYA,kCAAA,lCAAMA,4EAAyBC;AAA/B,AACE,2BAAA,mFAAA,vGAACC,+KAAyB,AAAc,AAAUD,oBAAI,AAAe,AAAUA;;AAEjF,AAAA;AAAA,cAAA,iBAAAE,WAAA,6BAAAC,qBAAAC,5FAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AAgLU,IAAA8C,iBAAA,AAAAC,oBAAA;AA9KI,wBAAA,xBAAmBzC,iCAAmBX,jCA8K1C;;AA7KI;AAAA,AACE,kCAAA,3BAAsBW,oCAAmBX;;;qBAiJjB,jBA2B9BqD;AAAA,AAAA,CAAAC,2DAAAA,yDAAAH,eAAAE,kBAAAC,qCAAAH,eAAAE;;AA1KR,IAAMzC,MAAI,mBAAA,mFAAA,tGAACC;IACLZ,IAAE,mBAAA,mFAAA,tGAACY;IACHC,IAAE,mBAAA,mFAAA,tGAACD;IACHE,UAAQ,mBAAA,mFAAA,tGAACF;AAHf,AA+JK,IAAAyB,WAAA;8IA1JyC,gDAAA,HAAKrC,qDAAgB,gDAAA,HAAKa,zRA0JnEyB,WAAA,iBAAAC,WAAA,EAAA,YAAA,cAAA,QAAA,iBAAAC,WAAA,EAAA,QAAA,AAAAC,yFAAA,SAAA,AAAAA;AAAA,AAAAD;KAAA,WAAA,CAAA,iBAAAE,WAAA;IAAAC,WAAA,iBAAAC,WAAA,EAAA,YAAA,cAAA,WAAA,iBAAAC,WAAA;uHAxJqC,+DAAA,lBAAK,CAAA,OAAM/B,xKAwJhDgC,WAAA,iBAAAC,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAP;AAAA,AAAAO;KAAA,WAAA;AAAA,AAAAD;;AAAA,AAAA,QAAArB,+CAAAA,6CAAAmB,SAAAC,YAAApB,yBAAAmB,SAAAC;;AAAA,AAAAF;;AAAA,AAAA,QAAAlB,+CAAAA,6CAAAgB,SAAAC,YAAAjB,yBAAAgB,SAAAC;iCAtJO5B,5BA6CP,iBAAAS;IAAAC,WAAA;AAAA,AAAA,QAAAC,+CAAAA,6CAAAF,SAAAC,YAAAC,yBAAAF,SAAAC;iCA5COT,5BA4CP,iBAAAW;IAAAC,WAAA;AAAA,AAAA,QAAAF,+CAAAA,6CAAAC,SAAAC,YAAAF,yBAAAC,SAAAC;KA1CI,gHAAA,9GAAM,iDAAA,jDAACX,6CAAEN,6FACJO,5BAyCT,iBAAAW;IAAAC,WAAA;AAAA,AAAA,QAAAJ,+CAAAA,6CAAAG,SAAAC,YAAAJ,yBAAAG,SAAAC;KA1CI,kCAEGX,5BAwCP,iBAAAY;IAAAC,WAAA;AAAA,AAAA,QAAAN,+CAAAA,6CAAAK,SAAAC,YAAAN,yBAAAK,SAAAC;iCAvCOZ,5BAuCP,iBAAAa;IAAAC,WAAA;AAAA,AAAA,QAAAR,+CAAAA,6CAAAO,SAAAC,YAAAR,yBAAAO,SAAAC;KAtCI,iBAAAb,WAAMV;IAANU,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;eACcE,fAqClB,IAAAY;IAAAC,WAAA;AAAA,AAAA,QAAAV,+CAAAA,6CAAAS,SAAAC,YAAAV,yBAAAS,SAAAC;;;;AAtCI;;;;AA+IJ,AAAAG;;AAAA,AAAA,QAAAU,gDAAAA,8CAAAZ,SAAAC,YAAAW,0BAAAZ,SAAAC;;AArKP,AAAA,GAAA,AAAA/B;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO","names":["app.app/window-resizing-handler","w","refx.alpha/dispatch","G__34016","props__27584__auto__","maybe-ref__27585__auto__","vec__34017","helix.core/extract-cljs-props","goog/DEBUG","G__34051","app.app/app","js/window","kit","refx.alpha/use-sub","h","scale-f","app.ui.shared.components.notifications/notifications","app.ui.shared.components.modal/info","cljs.core._EQ_","app.ui.kits.connect.cables/cables","app.ui.shared.boiler-plant.core/boiler-plant","app.ui.shared.sidebar.core/sidebar","G__34048","cljs.core/Keyword","app.ui.kits.connect.core/connect-kit","G__34038","G__34039","helix.core/jsx","G__34040","G__34041","G__34042","G__34043","G__34044","G__34045","G__34046","G__34047","G__34049","G__34050","G__34022","G__34023","obj34025","obj34027","helix.impl.props/->js","G__34028","G__34029","obj34031","G__34032","G__34033","obj34035","obj34037","helix.core/jsxs","G__34020","helix.hooks/wrap-fx","G__34021","helix.hooks/raw-use-effect"],"sourcesContent":["(ns app.app\n  (:require [helix.core :refer [defnc $]]\n            [helix.hooks :refer [use-effect]]\n            [helix.dom :as d]\n            [refx.alpha :refer [use-sub dispatch]]\n            [app.ui.shared.components.modal :as modal]\n            [app.ui.shared.components.notifications :refer [notifications]]\n            [app.ui.shared.sidebar.core :refer [sidebar]]\n            [app.ui.kits.connect.cables :refer [cables]]\n            [app.ui.kits.connect.core :refer [connect-kit]]\n            [app.ui.shared.boiler-plant.core :refer [boiler-plant]]))\n\n(defn window-resizing-handler [w]\n  (dispatch [:window-resize (.-innerWidth (.-target w)) (.-innerHeight (.-target w))]))\n\n(defnc app []\n  (use-effect :once\n              (.addEventListener js/window \"resize\" window-resizing-handler)\n              (fn []\n                (.removeEventListener js/window \"resize\" window-resizing-handler)))\n\n  (let [kit (use-sub [:kit])\n        w (use-sub [:screen-w])\n        h (use-sub [:screen-h])\n        scale-f (use-sub [:screen-scale-f])]\n\n    (d/div {:class \"kit-wrapper\" :style {:width (str w \"px\") :height (str h \"px\")}}\n           (d/p {:class \"version-tag\"}\n                (d/span {:style {:font-size (str (* 14 scale-f) \"px\")}} \"Version: 1.0\"))\n\n           ($ notifications)\n           ($ modal/info)\n\n           (when (= kit :connect)\n             ($ cables))\n           ($ boiler-plant)\n           ($ sidebar)\n           (case kit\n             :connect ($ connect-kit)\n             nil))))"]}