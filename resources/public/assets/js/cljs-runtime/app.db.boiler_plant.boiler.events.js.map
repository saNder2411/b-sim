{"version":3,"sources":["app/db/boiler_plant/boiler/events.cljs"],"mappings":";AAIA,sDAAA,tDAACA,6HACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,uFAAA,sEAAA,1MAACK,gIAAMN,2IAA2BG,MAAMC;;AAErE,sDAAA,tDAACb,2JACa,WAAAgB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAd,4BAAAc;SAAAA,LAAsBR;UAAtB,AAAAL,4CAAAa,eAAA,jEAAaT;IAAbU,aAAAF;QAAA,AAAAV,4CAAAY,WAAA,IAAA,/DAA2BR;YAA3B,AAAAJ,4CAAAY,WAAA,IAAA,nEAA6BN;AAA7B,AACE,IAAMO,OAAK,kDAAA,uFAAA,sEAAA,yDAAA,4DAAA,pUAACC,+CAAOX,sFAAID;IACjBa,kBAAgB,iBAAAC,WAAQV;AAAR,AAAA,GACQ,kDAAA,lDAACW,6CAAEJ;AAAY,QAAAG,WAAA;;AADvBA;;;AADtB,AAGE,6BAAA,uFAAA,yDAAA,4DAAA,lOAACT,mBAASJ,sFAAID,uLAA8Ba;;AAE9D,sDAAA,tDAACtB,2LACa,WAAAyB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAvB,4BAAAuB;SAAAA,LAAsBjB;UAAtB,AAAAL,4CAAAsB,eAAA,jEAAalB;IAAbmB,aAAAF;QAAA,AAAAnB,4CAAAqB,WAAA,IAAA,/DAA2BjB;YAA3B,AAAAJ,4CAAAqB,WAAA,IAAA,nEAA6Bf;AAA7B,AACE,IAAMO,OAAK,kDAAA,uFAAA,sEAAA,yDAAA,4DAAA,pUAACC,+CAAOX,sFAAID;IACjBa,kBAAgB,iBAAAO,WAAQhB;AAAR,AAAA,GACQ,kDAAA,lDAACW,6CAAEJ;AAAY,QAAAS,WAAA;;AADvBA;;;AADtB,AAGE,6BAAA,uFAAA,sEAAA,yDAAA,2EAAA,4DAAA,nXAACf,mBAASJ,sFAAID,wUAA6Da;;AAE7F,sDAAA,tDAACtB,kKACa,WAAA8B,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAA5B,4BAAA4B;SAAAA,LAAsBtB;UAAtB,AAAAL,4CAAA2B,eAAA,jEAAavB;IAAbwB,aAAAF;QAAA,AAAAxB,4CAAA0B,WAAA,IAAA,/DAA2BtB;YAA3B,AAAAJ,4CAAA0B,WAAA,IAAA,nEAA6BpB;AAA7B,AACE,IAAMO,OAAK,kDAAA,uFAAA,sEAAA,yDAAA,qEAAA,7UAACC,+CAAOX,sFAAID;IACjBa,kBAAgB,iBAAAY,WAAQrB;AAAR,AAAA,GACQ,kDAAA,lDAACW,6CAAEJ;AAAY,QAAAc,WAAA;;AADvBA;;;AADtB,AAGE,6BAAA,uFAAA,sEAAA,yDAAA,qEAAA,jTAACpB,mBAASJ,sFAAID,sQAAgDa;;AAEhF,sDAAA,tDAACtB,kMACa,WAAAmC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAjC,4BAAAiC;SAAAA,LAAsB3B;UAAtB,AAAAL,4CAAAgC,eAAA,jEAAa5B;IAAb6B,aAAAF;QAAA,AAAA7B,4CAAA+B,WAAA,IAAA,/DAA2B3B;YAA3B,AAAAJ,4CAAA+B,WAAA,IAAA,nEAA6BzB;AAA7B,AACE,IAAMO,OAAK,kDAAA,uFAAA,sEAAA,yDAAA,qEAAA,7UAACC,+CAAOX,sFAAID;IACjBa,kBAAgB,iBAAAiB,WAAQ1B;AAAR,AAAA,GACQ,kDAAA,lDAACW,6CAAEJ;AAAY,QAAAmB,WAAA;;AADvBA;;;AADtB,AAGE,6BAAA,uFAAA,sEAAA,yDAAA,2EAAA,qEAAA,5XAACzB,mBAASJ,sFAAID,iVAAiEa;;AAEjG,sDAAA,tDAACtB,6IACa,WAAAwC,SAA0B7B;AAA1B,AAAA,IAAA8B,aAAAD;IAAAC,iBAAA,AAAArC,4BAAAqC;SAAAA,LAAsB/B;UAAtB,AAAAL,4CAAAoC,eAAA,jEAAahC;AAAb,AACE,IAAAiC,aAA0E,kDAAA,uFAAA,sEAAA,yDAAA,xQAACrB,+CAAOX,sFAAID;IAAtFiC,iBAAA,AAAAtC,4BAAAsC;kBAAA,AAAArC,4CAAAqC,eAAA,zEAAcC;eAAd,AAAAtC,4CAAAqC,eAAA,tEAA0BE;mBAA1B,AAAAvC,4CAAAqC,eAAA,1EAAmCG;kBAAnC,AAAAxC,4CAAAqC,eAAA,zEAAgDI;kBAAhD,AAAAzC,4CAAAqC,eAAA,zEAA4DK;AAA5D,uSACMrC,lDACA,qDAAA,uFAAA,sEAAA,yDAAA,3QAACsC,wIAAWvC,8MAAwCwC,gBAAMN,xZAC1D,qaAAA,uFAAA,sEAAA,yDAAA,3nBAACK,wfAAWvC,uMAAqCwC,gBAAML,luBACvD,4uBAAA,uFAAA,sEAAA,yDAAA,4DAAA,9/BAAC9B,+zBAAUL,yQAAiD,AAAA,oFAAQmC,9sCACpE,ytCAAA,uFAAA,sEAAA,yDAAA,/6CAACI,4yCAAWvC,gNAAyCwC,gBAAMJ,9jDAC3D,4kDAAA,uFAAA,sEAAA,yDAAA,lyDAACG,+pDAAWvC,6MAAwCwC,gBAAMH,96DAC1D,27DAAA,uFAAA,sEAAA,yDAAA,jpEAACE,8gEAAWvC,+MAAwCwC,gBAAMF,vwEAC1D,oxEAAA,uFAAA,sEAAA,yDAAA,+EAAA,ljFAACjC,g2EAAUL;;AAEjC,sDAAA,tDAACT,oKACa,WAAAkD,SAA0BvC;AAA1B,AAAA,IAAAwC,aAAAD;IAAAC,iBAAA,AAAA/C,4BAAA+C;SAAAA,LAAsBzC;UAAtB,AAAAL,4CAAA8C,eAAA,jEAAa1C;AAAb,AACE,IAAM2C,iBAAe,8HAAA,2CAAA,uEAAA,hPAACC,uGAAMC;AAA5B,AACE,6BAAA,uFAAA,sEAAA,nLAACxC,mBAASJ,sFAAID,2IAA2B2C","names":["refx.alpha.reg_event_db","p__43398","p__43399","map__43411","cljs.core/--destructure-map","cljs.core.get","vec__43413","cljs.core.nth","vec__43419","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","p__43513","p__43515","map__43531","vec__43532","unit","cljs.core.get_in","converted-value","G__43562","cljs.core._EQ_","p__43597","p__43598","map__43604","vec__43605","G__43622","p__43632","p__43633","map__43636","vec__43637","G__43646","p__43648","p__43649","map__43650","vec__43651","G__43657","p__43660","map__43661","map__43662","water-level","pressure","conductivity","temperature","sludge-mass","cljs.core.update_in","cljs.core/merge","p__43669","map__43670","default-values","cljs.core.merge","app.db.defaults/BOILER"],"sourcesContent":["(ns app.db.boiler-plant.boiler.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-boiler\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [kit :boiler-plant :boiler] path) value)))\n\n(reg-event-db :change-boiler-pressure-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [unit (get-in db [kit :boiler-plant :boiler :pressure :unit])\n                      converted-value (cond-> value\n                                              (= unit \"psi\") (* 0.06894744825494))]\n                  (assoc-in db [kit :boiler :pressure :value] converted-value))))\n\n(reg-event-db :change-boiler-init-sim-output-pressure-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [unit (get-in db [kit :boiler-plant :boiler :pressure :unit])\n                      converted-value (cond-> value\n                                              (= unit \"psi\") (* 0.06894744825494))]\n                  (assoc-in db [kit :boiler-plant :boiler :init-sim-output :pressure :value] converted-value))))\n\n(reg-event-db :change-boiler-conductivity-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [unit (get-in db [kit :boiler-plant :boiler :conductivity :unit])\n                      converted-value (cond-> value\n                                              (= unit \"ppm\") (* 2))]\n                  (assoc-in db [kit :boiler-plant :boiler :conductivity :value] converted-value))))\n\n(reg-event-db :change-boiler-init-sim-output-conductivity-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [unit (get-in db [kit :boiler-plant :boiler :conductivity :unit])\n                      converted-value (cond-> value\n                                              (= unit \"ppm\") (* 2))]\n                  (assoc-in db [kit :boiler-plant :boiler :init-sim-output :conductivity :value] converted-value))))\n\n(reg-event-db :apply-boiler-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [{:keys [water-level pressure conductivity temperature sludge-mass]} (get-in db [kit :boiler-plant :boiler :init-sim-output])]\n                  (-> db\n                      (update-in [kit :boiler-plant :boiler :water-level] merge water-level)\n                      (update-in [kit :boiler-plant :boiler :pressure] merge pressure)\n                      (assoc-in [kit :boiler-plant :boiler :pressure :prev-value] (:value pressure))\n                      (update-in [kit :boiler-plant :boiler :conductivity] merge conductivity)\n                      (update-in [kit :boiler-plant :boiler :temperature] merge temperature)\n                      (update-in [kit :boiler-plant :boiler :sludge-mass] merge sludge-mass)\n                      (assoc-in [kit :boiler-plant :boiler :settings-view] false)))))\n\n(reg-event-db :restore-defaults-boiler-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [default-values (merge defaults/BOILER {:settings-view true})]\n                  (assoc-in db [kit :boiler-plant :boiler] default-values))))\n"]}