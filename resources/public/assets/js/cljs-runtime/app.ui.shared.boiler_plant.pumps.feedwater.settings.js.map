{"version":3,"sources":["app/ui/shared/boiler_plant/pumps/feedwater/settings.cljs"],"mappings":"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","names":["G__33420","props__27584__auto__","maybe-ref__27585__auto__","vec__33486","helix.core/extract-cljs-props","goog/DEBUG","G__33739","app.ui.shared.boiler-plant.pumps.feedwater.settings/mode-hud-settings","value","refx.alpha/use-sub","view","app.ui.shared.components.form/field-row","app.ui.shared.components.form/select","p1__33246#","refx.alpha/dispatch","app.ui.shared.components.form/checkbox","cljs.core/not","G__33884","vec__33905","G__34284","app.ui.shared.boiler-plant.pumps.feedwater.settings/performance-hud-settings","unit","p1__33839#","G__34329","vec__34337","G__34394","app.ui.shared.boiler-plant.pumps.feedwater.settings/rotation-hud-settings","p1__34309#","G__34414","vec__34424","G__34488","app.ui.shared.boiler-plant.pumps.feedwater.settings/flow-rate-hud-settings","p1__34395#","G__34523","vec__34529","G__34570","app.ui.shared.boiler-plant.pumps.feedwater.settings/performance-init-value","limits","app.units.constants/UNIT-LIMITS","cljs.core.get","validate-message","app.ui.shared.components.form/input-number","p1__34496#","p1__34499#","app.ui.shared.components.form/validate-input-number","p1__34502#","G__34585","vec__34593","G__34724","app.ui.shared.boiler-plant.pumps.feedwater.settings/rotation-init-max-value","p1__34572#","G__33491","G__33492","obj33500","G__33510","G__33511","obj33561","helix.core/jsx","G__33689","G__33690","obj33701","helix.core/jsxs","G__34129","G__34130","obj34173","G__34181","G__34182","obj34208","G__34237","G__34238","obj34242","G__34349","G__34350","obj34354","G__34356","G__34357","obj34360","G__34366","G__34367","obj34371","G__34435","G__34436","obj34438","G__34443","G__34444","obj34447","G__34454","G__34455","obj34474","G__34533","G__34534","obj34538","G__34542","G__34543","helix.impl.props/merge-obj","obj34547","helix.impl.props._props","G__34557","G__34558","obj34564","G__34650","G__34651","obj34664","G__34673","G__34674","obj34684","G__34710","G__34711","obj34714","p1__34575#","G__34769","G__34771","obj34776","G__34777","G__34778","obj34782","p1__34731#","G__34793","G__34794","obj34798","p1__34740#","G__34833","helix.core/Fragment","G__34834","G__34847","G__34848","G__34853","G__34854","G__34857","G__34858","G__34861","G__34862","G__34867","G__34868","G__34874","G__34875","G__34880","G__34881","G__34882","G__34883","G__34890","G__34891","obj34893","G__34895","G__34896","p1__34574#","G__34754","vec__34759","G__34807","app.ui.shared.boiler-plant.pumps.feedwater.settings/flow-rate-init-max-value","converted-value","p1__34734#","G__34821","vec__34826","G__34884","app.ui.shared.boiler-plant.pumps.feedwater.settings/settings-form","show-settings-form-sim-start-values","G__34886","vec__34887","G__34898","app.ui.shared.boiler-plant.pumps.feedwater.settings/feedwater-pump-settings","show-settings","app.ui.shared.components.modal/settings","G__34837","G__34838","obj34840","obj34842","helix.impl.props/->js","G__34869","G__34870","obj34872","G__34876","G__34877","obj34879"],"sourcesContent":["(ns app.ui.shared.boiler-plant.pumps.feedwater.settings\n  (:require [helix.core :refer [defnc $ <>]]\n            [helix.dom :as d]\n            [refx.alpha :refer [use-sub dispatch]]\n            [app.ui.shared.components.modal :as modal]\n            [app.ui.shared.components.form :as f]\n            [app.units.constants :refer [UNIT-LIMITS]]))\n\n(defnc mode-hud-settings []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-pump :mode :value]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-pump :mode :view]])]\n    ($ f/field-row {:label \"CONTROL MODE\"}\n       ($ f/select {:data      [{:value \"auto\" :label \"Auto\"} {:value \"manual\" :label \"Manual\"}]\n                    :value     value\n                    :on-change #(dispatch [:change-feedwater-pump [[:mode :value] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-pump [[:mode :view] (not view)]])}))))\n\n(defnc performance-hud-settings []\n  (let [unit (use-sub [:kit-data-by-keywords [:feedwater-pump :performance :unit]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-pump :performance :view]])]\n    ($ f/field-row {:label \"PERFORMANCE\"}\n       ($ f/select {:data      [{:value \"%\" :label \"%\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-pump [[:performance :unit] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-pump [[:performance :view] (not view)]])}))))\n\n(defnc rotation-hud-settings []\n  (let [unit (use-sub [:kit-data-by-keywords [:feedwater-pump :rotation :unit]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-pump :rotation :view]])]\n    ($ f/field-row {:label \"ROTATIONAL SPEED\"}\n       ($ f/select {:data      [{:value \"rpm\" :label \"rpm\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-pump [[:rotation :unit] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-pump [[:rotation :view] (not view)]])}))))\n\n(defnc flow-rate-hud-settings []\n  (let [unit (use-sub [:kit-data-by-keywords [:feedwater-pump :flow-rate :unit]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-pump :flow-rate :view]])]\n    ($ f/field-row {:label \"FLOW-RATE\"}\n       ($ f/select {:data      [{:value \"t/h\" :label \"t/h\"} {:value \"T/h\" :label \"T/h\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-pump [[:flow-rate :unit] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-pump [[:flow-rate :view] (not view)]])}))))\n\n(defnc performance-init-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-pump :init-sim-output :performance :value]])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-pump :performance :unit]])\n        limits (-> UNIT-LIMITS :feed-water-pump-performance (get unit))\n        validate-message (str \"Initial pump performance value must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"PERFORMANCE\"}\n       ($ f/input-number {:value     value\n                          :on-change #(dispatch [:change-feedwater-pump [[:init-sim-output :performance :value] %]])\n                          :on-blur   (fn [] (f/validate-input-number value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-pump [[:init-sim-output :performance :value] %]])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"%\" :label \"%\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-pump [[:performance :unit] %]])}))))\n\n(defnc rotation-init-max-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-pump :rotation :max-value]])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-pump :rotation :unit]])\n        limits (-> UNIT-LIMITS :feed-water-pump-rot-speed (get unit))\n        validate-message (str \"Initial pump maximum rotational speed value must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"MAXIMUM ROTATIONAL SPEED\"}\n       ($ f/input-number {:value     value\n                          :on-change #(dispatch [:change-feedwater-pump [[:rotation :max-value] %]])\n                          :on-blur   (fn [] (f/validate-input-number value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-pump [[:rotation :max-value] %]])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"rpm\" :label \"rpm\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-pump [[:rotation :unit] %]])}))))\n\n(defnc flow-rate-init-max-value []\n  (let [converted-value (use-sub [:feedwater-pump-flow-rate-max-converted-value])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-pump :flow-rate :unit]])\n        limits (-> UNIT-LIMITS :feed-water-elect-valve-flow-rate (get unit))\n        validate-message (str \"Initial flow rate maximum value must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"MAXIMUM FLOW-RATE\"}\n       ($ f/input-number {:value     converted-value\n                          :on-change #(dispatch [:change-feedwater-pump-flow-rate-max-value %])\n                          :on-blur   (fn [] (f/validate-input-number converted-value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-pump-flow-rate-max-value %])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"t/h\" :label \"t/h\"} {:value \"T/h\" :label \"T/h\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-pump [[:flow-rate :unit] %]])}))))\n\n(defnc settings-form []\n  (let [show-settings-form-sim-start-values (use-sub [:show-settings-form-sim-start-values])]\n    (<>\n      (d/div {:class \"divider\" :style {:margin-top 0}} \"head-up-display\")\n\n      ($ mode-hud-settings)\n\n      ($ performance-hud-settings)\n\n      ($ rotation-hud-settings)\n\n      ($ flow-rate-hud-settings)\n\n      (when show-settings-form-sim-start-values\n        (<>\n          (d/div {:class \"divider\"} \"simulation start values\")\n\n          ($ performance-init-value)\n\n          (d/div {:class \"divider\"} \"specifications\")\n\n          ($ rotation-init-max-value)\n\n          ($ flow-rate-init-max-value))))))\n\n(defnc feedwater-pump-settings []\n  (let [show-settings (use-sub [:kit-data-by-keywords [:feedwater-pump :settings-view]])]\n    (when show-settings\n      ($ modal/settings {:title      \"Feedwater Pump Settings\"\n                         :on-default #(dispatch [:restore-defaults-feedwater-pump-settings])\n                         :on-done    #(dispatch [:apply-feedwater-pump-settings])}\n\n         ($ settings-form)))))\n"]}