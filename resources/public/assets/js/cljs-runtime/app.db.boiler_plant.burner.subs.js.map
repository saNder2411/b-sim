{"version":3,"sources":["app/db/boiler_plant/burner/subs.cljs"],"mappings":";AAIA,iDAAA,jDAACA,0GACQ,WAAAC,SAA0BM;AAA1B,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBI;UAAtB,AAAAF,4CAAAF,eAAA,jEAAaG;AAAb,AACE,yDAAA,uFAAA,sEAAA,/MAACG,+CAAOF,sFAAID;;AAEvB,mBAAA,4GAAA,gDAAA,mFAAA,lQAACI,mUAEQ,WAAKC,OAAOH;AAAZ,AACE,IAAAI,aAA2B,AAAA,0FAAWD;IAAtCC,iBAAA,AAAAR,4BAAAQ;WAAA,AAAAP,4CAAAO,eAAA,lEAAcC;YAAd,AAAAR,4CAAAO,eAAA,nEAAmBE;AAAnB,AACE,IAAAC,WAAQ,AAAA,8EAAKD;IAAbC,eAAA,gGAAAA,9FACQ,kDAAA,lDAACC,6CAAEH,aAAY,WAAI,CAAAE,WAAA,vBAAeE;AAD1C,AAAA,AAEiB,kBAAK,2DAAA,KAAA,yDAAAF,zHAACG,XAAsBC;;;AAE1D,mBAAA,iHAAA,gDAAA,mFAAA,vQAACT,wUAEQ,WAAKC,OAAOH;AAAZ,AACE,IAAAY,aAA2B,AAAA,0FAAWT;IAAtCS,iBAAA,AAAAhB,4BAAAgB;WAAA,AAAAf,4CAAAe,eAAA,lEAAcP;YAAd,AAAAR,4CAAAe,eAAA,nEAAmBN;AAAnB,AACE,IAAAO,WAAQ,AAAA,gFAAMP;IAAdO,eAAA,gGAAAA,9FACQ,kDAAA,lDAACL,6CAAEH,aAAY,WAAI,CAAAQ,WAAA,vBAAeJ;AAD1C,AAAA,AAEiB,kBAAK,2DAAA,KAAA,yDAAAI,zHAACH,XAAsBC;;;AAE1D,mBAAA,0GAAA,gDAAA,mFAAA,hQAACT,iUAEQ,WAAKC,OAAOH;AAAZ,AACE,IAAAc,aAAyB,AAAA,qFAAQX;IAAjCW,iBAAA,AAAAlB,4BAAAkB;WAAA,AAAAjB,4CAAAiB,eAAA,lEAAcT;UAAd,AAAAR,4CAAAiB,eAAA,jEAAmBC;AAAnB,AACE,IAAAC,WAAQD;AAAR,AAAA,GACQ,kDAAA,lDAACP,6CAAEH;AAAW,QAAAW,WAAA;;AADtBA;;;AAGb,mBAAA,kGAAA,gDAAA,mFAAA,xPAACd,yTAEQ,WAAKC,OAAOH;AAAZ,AACE,IAAAiB,aAA2B,AAAA,qFAAQd;IAAnCc,iBAAA,AAAArB,4BAAAqB;WAAA,AAAApB,4CAAAoB,eAAA,lEAAcZ;YAAd,AAAAR,4CAAAoB,eAAA,nEAAmBX;AAAnB,AACE,IAAAY,WAAQZ;AAAR,AAAA,GACQ,kDAAA,lDAACE,6CAAEH;AAAW,QAAAa,WAAA;;AADtBA;;;AAGb,mBAAA,qIAAA,gDAAA,mFAAA,3RAAChB,4VAEQ,WAAKC,OAAOH;AAAZ,AACE,IAAAmB,aAA2B,AAAA,qFAAA,AAAA,2GAAIhB;IAA/BgB,iBAAA,AAAAvB,4BAAAuB;WAAA,AAAAtB,4CAAAsB,eAAA,lEAAcd;YAAd,AAAAR,4CAAAsB,eAAA,nEAAmBb;AAAnB,AACE,IAAAc,WAAQd;IAARc,eAAA,qOAAAA,nOACQ,kDAAA,lDAACZ,6CAAEH,uBAAiB,oIAAK,CAAA,SAAAe,nIAAS,2DAAA,KAAA,hEAACV,XAAsBC;AADjE,AAAA,GAEQ,kDAAA,lDAACH,6CAAEH;AAAiB,kBAAK,2DAAA,KAAA,yDAAAe,zHAACV,XAAsBC;;AAFxDS;;;AAIb,mBAAA,6FAAA,gDAAA,mFAAA,nPAAClB,qUAEQ,WAAKmB,gBAAgBrB;AAArB,AACE,oEAAA,7DAACQ,6CAAEa","names":["refx.alpha.reg_sub","p__40744","map__40747","cljs.core/--destructure-map","cljs.core.get","kit","db","_","cljs.core.get_in","refx.alpha/reg-sub","burner","map__40754","unit","value","G__40760","cljs.core._EQ_","Math/round","cljs.pprint.cl_format","js/parseFloat","map__40773","G__40775","map__40786","max","G__40787","map__40794","G__40797","map__40801","G__40802","current-hotspot"],"sourcesContent":["(ns app.db.boiler-plant.burner.subs\n  (:require [refx.alpha :refer [reg-sub]]\n            [cljs.pprint :refer [cl-format]]))\n\n(reg-sub :burner\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :boiler-plant :burner])))\n\n(reg-sub :burner/pressure-converted-value-on\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (:pressure burner)]\n             (cond-> (:on value)\n                     (= unit \"psi\") (-> (* 14.5037738) Math/round)\n                     :default (->> (cl-format nil \"~,1f\") js/parseFloat)))))\n\n(reg-sub :burner/pressure-converted-value-off\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (:pressure burner)]\n             (cond-> (:off value)\n                     (= unit \"psi\") (-> (* 14.5037738) Math/round)\n                     :default (->> (cl-format nil \"~,1f\") js/parseFloat)))))\n\n(reg-sub :burner/power-max-converted-value\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit max]} (:power burner)]\n             (cond-> max\n                     (= unit \"MW\") (* 0.001)))))\n\n(reg-sub :burner/power-converted-value\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (:power burner)]\n             (cond-> value\n                     (= unit \"MW\") (* 0.001)))))\n\n(reg-sub :burner/fuel-consumption-coeff-converted-value\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (-> burner :fuel-consumption :coeff)]\n             (cond-> value\n                     (= unit \"nm\u00b3/kW*s\") (->> (* 3600) (cl-format nil \"~,1f\") js/parseFloat)\n                     (= unit \"nm\u00b3/kW*h\") (->> (cl-format nil \"~,3f\") js/parseFloat)))))\n\n(reg-sub :burner/show-toolbar-panel\n         :<- [:hotspots/current]\n         (fn [current-hotspot _]\n           (= current-hotspot \"burner\")))\n\n\n\n\n\n\n\n\n"]}