{"version":3,"sources":["app/ui/shared/boiler_plant/probes/level/calibration/core.cljs"],"mappings":";AAKA,AAAA;AAAA,6EAAA,iBAAAA,WAAA,4FAAAC,qBAAAC,1NAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAMS,OAAK,mBAAA,mFAAA,tGAACC;IAAZJ,aACwC,mBAAA,nBAACI,sGAASD;IADlDH,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEACcK;uBADd,AAAAH,4CAAAF,eAAA,9EACqBM;AADrB,AAqEK,IAAAE,WAAAC;0DAlEEF,tDAkEFG,WAAA,cAAA,CAAA,iBAAAC;qEAlE8C,AAAA,6FAAYL,oDAEZ,AAAA,uGAAiBD,zTAgE/DO,WAAA,iBAAAC,WAAA,EAAA,uIAAA,cAAA,MAAA,6HAAA,YAAA,QAAA,UAAA,IAAA,OAAA;AAAA,AAAAA;;AAAA,AAAA,QAAAC,+CAAAA,6CAAAH,SAAAC,YAAAE,yBAAAH,SAAAC;iCA5DEL,5BA4DF,iBAAAQ;qEA5D8C,AAAA,mFAAOT,oDAEP,AAAA,6FAAYD,rSA0D1DW,WAAA,iBAAAC,WAAA,EAAA,6HAAA,cAAA,MAAA,mHAAA,YAAA,QAAA,UAAA,IAAA,OAAA;AAAA,AAAAA;;AAAA,AAAA,QAAAH,+CAAAA,6CAAAC,SAAAC,YAAAF,yBAAAC,SAAAC;iCAtDET,5BAsDF,iBAAAW;qEAtD8C,AAAA,kFAAMZ,kDAEN,AAAA,kFAAMD,vRAoDpDc,WAAA,iBAAAC,WAAA,EAAA,4HAAA,cAAA,IAAA,wGAAA,YAAA,QAAA,UAAA,IAAA,OAAA;AAAA,AAAAA;;AAAA,AAAA,QAAAN,+CAAAA,6CAAAI,SAAAC,YAAAL,yBAAAI,SAAAC;;AAAA,AAAA,QAAAE,gDAAAA,8CAAAb,SAAAE,YAAAW,0BAAAb,SAAAE;;AAtEP,AAAA,GAAA,AAAAb;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO","names":["G__41548","props__27592__auto__","maybe-ref__27593__auto__","vec__41549","helix.core/extract-cljs-props","goog/DEBUG","G__41567","app.ui.shared.boiler-plant.probes.level.calibration.core/level-calibration","map__41552","cljs.core/--destructure-map","cljs.core.get","subs","refx.alpha/use-sub","points","points-by-boiler","app.ui.shared.boiler-plant.probes.level.calibration.indicator/level-cal-indicator","G__41553","helix.core/Fragment","G__41554","G__41555","G__41556","obj41558","helix.core/jsx","G__41559","G__41560","obj41562","G__41563","G__41564","obj41566","helix.core/jsxs"],"sourcesContent":["(ns app.ui.shared.boiler-plant.probes.level.calibration.core\n  (:require [helix.core :refer [defnc <> $]]\n            [refx.alpha :refer [use-sub]]\n            [app.ui.shared.boiler-plant.probes.level.calibration.indicator :refer [level-cal-indicator]]))\n\n(defnc level-calibration []\n  (let [subs (use-sub [:boiler/level-calibration-subs])\n        {:keys [points points-by-boiler]} (use-sub [subs])]\n    (<>\n      ($ level-cal-indicator {:point-by-boiler-level (:next-high points-by-boiler)\n                              :water-level           100\n                              :digit-level           (:next-real-high points)\n                              :point-pos             \"cal.h\"\n                              :opacity               0.5\n                              :fill                  \"#c83b44\"})\n      ($ level-cal-indicator {:point-by-boiler-level (:high points-by-boiler)\n                              :water-level           100\n                              :digit-level           (:real-high points)\n                              :point-pos             \"cal.h\"\n                              :opacity               1\n                              :fill                  \"#c83b44\"})\n      ($ level-cal-indicator {:point-by-boiler-level (:low points-by-boiler)\n                              :water-level           0\n                              :digit-level           (:low points)\n                              :point-pos             \"cal.l\"\n                              :opacity               1\n                              :fill                  \"#286bb7\"}))))\n"]}