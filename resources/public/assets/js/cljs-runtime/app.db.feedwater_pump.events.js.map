{"version":3,"sources":["app/db/feedwater_pump/events.cljs"],"mappings":";AAIA,sDAAA,tDAACA,6IACa,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBO;UAAtB,AAAAL,4CAAAF,eAAA,jEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAA2BK;IAA3BH,aAAA,AAAAD,4CAAAD,WAAA,IAAA;WAAA,AAAAC,4CAAAC,WAAA,IAAA,lEAA8BI;YAA9B,AAAAL,4CAAAC,WAAA,IAAA,nEAAmCK;AAAnC,AACE,OAACC,mBAASJ,GAAG,6CAAA,wIAAA,rLAACK,gIAAM,AAACC,gDAAQP,uFAAsBG,MAAMC;;AAEzE,sDAAA,tDAACb,qLACa,WAAAiB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAf,4BAAAe;SAAAA,LAAsBT;UAAtB,AAAAL,4CAAAc,eAAA,jEAAaV;IAAbW,aAAAF;QAAA,AAAAX,4CAAAa,WAAA,IAAA,/DAA2BT;YAA3B,AAAAJ,4CAAAa,WAAA,IAAA,nEAA6BP;AAA7B,AACE,IAAMQ,SAAO,AAACL,gDAAQP;IAChBa,OAAK,kDAAA,0FAAA,0EAAA,+DAAA,rRAACC,+CAAOb,sFAAIW;IACjBG,kBAAgB,iBAAAC,WAAQZ;AAAR,AAAA,GACQ,kDAAA,lDAACa,6CAAEJ;AAAY,QAAAG,WAAA;;AADvBA;;;AAFtB,AAIE,6BAAA,0FAAA,0EAAA,+DAAA,zPAACX,mBAASJ,sFAAIW,sNAA8CG;;AAE9E,sDAAA,tDAACxB,8JACa,WAAA2B,SAA0BhB;AAA1B,AAAA,IAAAiB,aAAAD;IAAAC,iBAAA,AAAAxB,4BAAAwB;SAAAA,LAAsBlB;UAAtB,AAAAL,4CAAAuB,eAAA,jEAAanB;AAAb,AACE,IAAMY,SAAO,AAACL,gDAAQP;IAAtBoB,aAC4B,kDAAA,0FAAA,0EAAA,tNAACN,+CAAOb,sFAAIW;IADxCQ,iBAAA,AAAAzB,4BAAAyB;kBAAA,AAAAxB,4CAAAwB,eAAA,zEACcC;AADd,4EAEMpB,lDACA,qDAAA,0FAAA,0EAAA,zNAACqB,wIAAWV,4JAAqCW,gBAAMF,9UACvD,2VAAA,0FAAA,0EAAA,+EAAA,vkBAAChB,uaAAUO;;AAEjC,sDAAA,tDAACrB,oLACa,WAAAiC,SAA0BtB;AAA1B,AAAA,IAAAuB,aAAAD;IAAAC,iBAAA,AAAA9B,4BAAA8B;SAAAA,LAAsBxB;UAAtB,AAAAL,4CAAA6B,eAAA,jEAAazB;AAAb,AACE,IAAMY,SAAO,AAACL,gDAAQP;IAChB0B,iBAAe,sIAAA,2CAAA,uEAAA,xPAACC,uGAAMC;AAD5B,AAEE,6BAAA,0FAAA,hHAACvB,mBAASJ,sFAAIW,yFAAwBc","names":["refx.alpha.reg_event_db","p__33351","p__33352","map__33395","cljs.core/--destructure-map","cljs.core.get","vec__33396","cljs.core.nth","vec__33399","kit","db","_","path","value","cljs.core/assoc-in","cljs.core.into","cljs.core.keyword","p__33433","p__33435","map__33457","vec__33459","kit-kw","unit","cljs.core.get_in","converted-value","G__33484","cljs.core._EQ_","p__33493","map__33497","map__33509","performance","cljs.core.update_in","cljs.core/merge","p__33530","map__33533","default-values","cljs.core.merge","app.db.defaults/FEEDWATER-PUMP"],"sourcesContent":["(ns app.db.feedwater-pump.events\n  (:require [refx.alpha :refer [reg-event-fx reg-event-db]]\n            [app.db.defaults :as defaults]))\n\n(reg-event-db :change-feedwater-pump\n              (fn [{:keys [kit] :as db} [_ [path value]]]\n                (assoc-in db (into [(keyword kit) :feedwater-pump] path) value)))\n\n(reg-event-db :change-feedwater-pump-flow-rate-max-value\n              (fn [{:keys [kit] :as db} [_ value]]\n                (let [kit-kw (keyword kit)\n                      unit (get-in db [kit-kw :feedwater-pump :flow-rate :unit])\n                      converted-value (cond-> value\n                                              (= unit \"T/h\") (* 1.016260162601626))]\n                  (assoc-in db [kit-kw :feedwater-pump :flow-rate :max-value] converted-value))))\n\n(reg-event-db :apply-feedwater-pump-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      {:keys [performance]} (get-in db [kit-kw :feedwater-pump :init-sim-output])]\n                  (-> db\n                      (update-in [kit-kw :feedwater-pump :performance] merge performance)\n                      (assoc-in [kit-kw :feedwater-pump :settings-view] false)))))\n\n(reg-event-db :restore-defaults-feedwater-pump-settings\n              (fn [{:keys [kit] :as db} _]\n                (let [kit-kw (keyword kit)\n                      default-values (merge defaults/FEEDWATER-PUMP {:settings-view true})]\n                  (assoc-in db [kit-kw :feedwater-pump] default-values))))\n"]}