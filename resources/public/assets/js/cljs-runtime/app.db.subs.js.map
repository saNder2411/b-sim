{"version":3,"sources":["app/db/subs.cljs"],"mappings":"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","names":["refx.alpha.reg_sub","db","_","refx.alpha/reg-sub","screen","p__35363","map__35364","cljs.core/--destructure-map","cljs.core.get","firstname","lastname","p__35378","map__35379","kit","cljs.core.get_in","p__35386","p__35387","map__35390","vec__35393","cljs.core.nth","path","cljs.core.into","p__35402","map__35405","sim","intended-use","cljs.core._EQ_","cljs.core.not_EQ_","p__35412","map__35413","p__35415","map__35416","p__35417","map__35418","p__35419","map__35420","p__35421","vec__35422","value","max-value","p__35425","map__35426","p__35427","map__35428","title","text","cljs.core/empty?","p__35429","map__35430","p__35431","map__35432","p__35434","p__35435","map__35437","vec__35438","controller-id","controller","p__35450","map__35453","p__35460","map__35461","p__35468","map__35471","p__35480","p__35481","map__35484","vec__35485","p__35498","map__35499","p__35508","map__35509","p__35513","p__35514","map__35515","vec__35516","p__35519","map__35520","p__35521","p__35522","map__35523","vec__35524","probe-id","probe","p__35527","map__35528","p__35529","p__35530","map__35531","vec__35532","p__35535","map__35536","p__35537","map__35538","p__35539","p__35540","map__35541","vec__35542","p__35545","map__35546","p__35547","map__35548","p__35549","p__35550","map__35551","vec__35552","p__35555","vec__35556","id","p__35559","vec__35560","p__35563","vec__35564","p__35567","vec__35568","actuator-type","current-hotspot","p__35571","vec__35572","level-controller-id"],"sourcesContent":["(ns app.db.subs\n  (:require [refx.alpha :refer [reg-sub]]))\n\n(reg-sub :screen\n         (fn [db _]\n           (:screen db)))\n\n(reg-sub :screen-w\n         :<- [:screen]\n         (fn [screen _]\n           (:w screen)))\n\n(reg-sub :screen-h\n         :<- [:screen]\n         (fn [screen _]\n           (:h screen)))\n\n(reg-sub :screen-scale-f\n         :<- [:screen]\n         (fn [screen _]\n           (:scale-f screen)))\n\n(reg-sub :user\n         (fn [db _]\n           (:user db)))\n\n(reg-sub :user-full-name\n         :<- [:user]\n         (fn [{:keys [firstname lastname]} _]\n           (str firstname \" \" lastname)))\n\n(reg-sub :kit\n         (fn [db _]\n           (:kit db)))\n\n(reg-sub :sim\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :sim])))\n\n(reg-sub :kit-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (get-in db (into [kit] path))))\n\n(reg-sub :show-settings-form-sim-start-values\n         (fn [{:keys [kit] :as db} _]\n           (let [sim (get-in db [kit :sim])\n                 intended-use (get-in db [kit :general-settings :intended-use])]\n             (and (= sim \"stopped\") (not= intended-use \"demonstration\")))))\n\n(reg-sub :highlight-hotspots\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :hotspots :highlight])))\n\n(reg-sub :current-hotspot\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :hotspots :current])))\n\n(reg-sub :steam-value\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :general-settings :steam :value])))\n\n(reg-sub :steam-max-value\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :general-settings :steam :max-value])))\n\n(reg-sub :steam-%\n         :<- [:steam-value]\n         :<- [:steam-max-value]\n         (fn [[value max-value] _]\n           (let [value (* 100 (/ value max-value))]\n             (if (< value 0) 0 value))))\n\n(reg-sub :modal-info\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :modal-info])))\n\n(reg-sub :modal-info-show\n         :<- [:modal-info]\n         (fn [{:keys [title text]} _]\n           (or (not (empty? title)) (not (empty? text)))))\n\n(reg-sub :notifications\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :notifications])))\n\n(reg-sub :low-limiter-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :low-limiter :controller-id])))\n\n(reg-sub :current-low-limiter-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [controller-id (get-in db [kit :system-config :low-limiter :controller-id])\n                 controller (get-in db [kit :low-limiter :controllers controller-id])]\n             (get-in controller path))))\n\n(reg-sub :low-level-prop-I-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :low-limiter :probe-ids 0])))\n\n(reg-sub :low-level-prop-II-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :low-limiter :probe-ids 1])))\n\n(reg-sub :high-limiter-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :high-limiter :controller-id])))\n\n(reg-sub :current-high-limiter-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [controller-id (get-in db [kit :system-config :high-limiter :controller-id])\n                 controller (get-in db [kit :high-limiter :controllers controller-id])]\n             (get-in controller path))))\n\n(reg-sub :high-level-probe-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :high-limiter :probe-ids 0])))\n\n(reg-sub :cond-controller-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :cond :controller-id])))\n\n(reg-sub :current-cond-controller-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [controller-id (get-in db [kit :system-config :cond :controller-id])\n                 controller (get-in db [kit :cond :controllers controller-id])]\n             (get-in controller path))))\n\n(reg-sub :cond-probe-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :cond :probe-ids 0])))\n\n(reg-sub :current-cond-probe-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [probe-id (get-in db [kit :system-config :cond :probe-ids 0])\n                 probe (get-in db [kit :cond :probes 0 probe-id])]\n             (get-in probe path))))\n\n(reg-sub :level-controller-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :level :controller-id])))\n\n(reg-sub :current-level-controller-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [controller-id (get-in db [kit :system-config :level :controller-id])\n                 controller (get-in db [kit :level :controllers controller-id])]\n             (get-in controller path))))\n\n(reg-sub :current-level-controller-actuator-type\n         (fn [{:keys [kit] :as db} _]\n           (let [controller-id (get-in db [kit :system-config :level :controller-id])]\n             (get-in db [kit :level :controllers controller-id :actuator-type]))))\n\n(reg-sub :level-probe-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :level :probe-ids 0])))\n\n(reg-sub :current-level-probe-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [probe-id (get-in db [kit :system-config :level :probe-ids 0])\n                 probe (get-in db [kit :level :probes 0 probe-id])]\n             (get-in probe path))))\n\n(reg-sub :temperature-probe-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :temperature :probe-ids 0])))\n\n(reg-sub :converter-id\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [kit :system-config :converter :controller-id])))\n\n(reg-sub :current-converter-data-by-path\n         (fn [{:keys [kit] :as db} [_ path]]\n           (let [controller-id (get-in db [kit :system-config :converter :controller-id])\n                 controller (get-in db [kit :converter :controllers controller-id])]\n             (get-in controller path))))\n\n(reg-sub :show-low-limiter-hot-spot\n         :<- [:low-limiter-id]\n         :<- [:sim]\n         (fn [[id sim] _]\n           (or (not= id \"none\") (not= sim \"run\"))))\n\n(reg-sub :show-high-limiter-hot-spot\n         :<- [:high-limiter-id]\n         :<- [:sim]\n         (fn [[id sim] _]\n           (or (not= id \"none\") (not= sim \"run\"))))\n\n(reg-sub :show-cond-controller-hot-spot\n         :<- [:cond-controller-id]\n         :<- [:sim]\n         (fn [[id sim] _]\n           (or (not= id \"none\") (not= sim \"run\"))))\n\n(reg-sub :show-level-controller-hot-spot\n         :<- [:level-controller-id]\n         :<- [:sim]\n         (fn [[id sim] _]\n           (or (not= id \"none\") (not= sim \"run\"))))\n\n(reg-sub :show-converter-hot-spot\n         :<- [:level-probe-id]\n         (fn [id _]\n           (= id \"NRGT 26-2\")))\n\n(reg-sub :show-feed-valve-hot-spot\n         :<- [:current-level-controller-actuator-type]\n         (fn [actuator-type _]\n           (not= actuator-type :pump)))\n\n(reg-sub :show-feed-pump-hot-spot\n         :<- [:current-level-controller-actuator-type]\n         (fn [actuator-type _]\n           (= actuator-type :pump)))\n\n(reg-sub :show-toolbar\n         :<- [:current-hotspot]\n         (fn [current-hotspot _]\n           (not= current-hotspot \"none\")))\n\n(reg-sub :level-calibration-boiler-view-subs\n         :<- [:kit]\n         :<- [:level-controller-id]\n         (fn [[kit level-controller-id] _]\n           (let [controller-id (if (= level-controller-id \"none\") \"NRR 2-60\" level-controller-id)]\n             (str kit \"/\" controller-id \"/calibration-boiler-view\"))))\n"]}