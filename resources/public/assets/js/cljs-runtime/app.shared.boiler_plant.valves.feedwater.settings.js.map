{"version":3,"sources":["app/shared/boiler_plant/valves/feedwater/settings.cljs"],"mappings":"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","names":["G__77991","props__27584__auto__","maybe-ref__27585__auto__","vec__77994","helix.core/extract-cljs-props","goog/DEBUG","G__78024","app.shared.boiler-plant.valves.feedwater.settings/mode-hud-settings","value","refx.alpha/use-sub","view","app.shared.components.form/field-row","app.shared.components.form/select","p1__77988#","refx.alpha/dispatch","app.shared.components.form/checkbox","cljs.core/not","G__78029","vec__78031","G__78061","app.shared.boiler-plant.valves.feedwater.settings/damper-hud-settings","unit","p1__78026#","G__78068","vec__78072","G__78100","app.shared.boiler-plant.valves.feedwater.settings/flow-rate-hud-settings","p1__78064#","G__78110","vec__78114","G__78142","app.shared.boiler-plant.valves.feedwater.settings/damper-init-value","limits","app.units.constants/UNIT-LIMITS","cljs.core.get","validate-message","app.shared.components.form/input-number","p1__78105#","p1__78106#","app.shared.components.form/validate-input-number","p1__78107#","G__78152","vec__78156","G__78183","app.shared.boiler-plant.valves.feedwater.settings/flow-rate-init-max-value","converted-value","p1__78145#","p1__78148#","G__77999","G__78001","obj78006","G__78009","G__78010","obj78014","helix.core/jsx","G__78017","G__78018","obj78022","helix.core/jsxs","G__78037","G__78038","obj78042","G__78045","G__78046","obj78050","G__78053","G__78054","obj78058","G__78079","G__78080","obj78084","G__78087","G__78088","obj78090","G__78095","G__78096","obj78098","G__78121","G__78122","obj78126","G__78129","G__78130","helix.impl.props/merge-obj","obj78132","helix.impl.props._props","G__78137","G__78138","obj78140","G__78161","G__78162","obj78166","G__78169","G__78170","obj78174","G__78175","G__78176","obj78180","p1__78149#","G__78201","G__78202","obj78204","G__78205","G__78206","obj78210","p1__78185#","G__78217","G__78218","obj78220","p1__78188#","G__78235","G__78236","obj78238","G__78239","G__78243","obj78245","p1__78227#","G__78286","G__78287","obj78289","G__78291","G__78292","obj78294","p1__78257#","G__78299","G__78300","obj78304","p1__78261#","G__78319","G__78320","obj78322","G__78323","G__78324","obj78326","p1__78311#","G__78327","G__78328","obj78330","p1__78313#","G__78337","helix.core/Fragment","G__78338","G__78345","G__78346","G__78347","G__78348","G__78349","G__78350","G__78351","G__78352","G__78357","G__78358","G__78363","G__78364","G__78365","G__78366","G__78367","G__78368","G__78369","G__78370","G__78371","G__78372","G__78379","G__78380","obj78382","G__78383","G__78384","G__78193","vec__78195","G__78225","app.shared.boiler-plant.valves.feedwater.settings/travel-time-init-value","p1__78187#","G__78229","vec__78231","G__78250","app.shared.boiler-plant.valves.feedwater.settings/potentiometer-connection-init-value","G__78277","vec__78280","G__78309","app.shared.boiler-plant.valves.feedwater.settings/potentiometer-damper-closed-init-value","p1__78260#","G__78315","vec__78316","G__78331","app.shared.boiler-plant.valves.feedwater.settings/potentiometer-damper-open-init-value","p1__78312#","G__78333","vec__78334","G__78373","app.shared.boiler-plant.valves.feedwater.settings/settings-form","show-settings-form-sim-start-values","G__78375","vec__78376","G__78385","app.shared.boiler-plant.valves.feedwater.settings/feedwater-valve-settings","show-settings","app.shared.components.modal/settings","G__78339","G__78340","obj78342","obj78344","helix.impl.props/->js","G__78353","G__78354","obj78356","G__78359","G__78360","obj78362"],"sourcesContent":["(ns app.shared.boiler-plant.valves.feedwater.settings\n  (:require [helix.core :refer [defnc $ <>]]\n            [helix.dom :as d]\n            [refx.alpha :refer [use-sub dispatch]]\n            [app.shared.components.modal :as modal]\n            [app.shared.components.form :as f]\n            [app.units.constants :refer [UNIT-LIMITS]]))\n\n\n(defnc mode-hud-settings []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-valve :mode :value]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-valve :mode :view]])]\n    ($ f/field-row {:label \"CONTROL MODE\"}\n       ($ f/select {:data      [{:value \"auto\" :label \"Auto\"} {:value \"manual\" :label \"Manual\"}]\n                    :value     value\n                    :on-change #(dispatch [:change-feedwater-valve [[:mode :value] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-valve [[:mode :view] (not view)]])}))))\n\n(defnc damper-hud-settings []\n  (let [unit (use-sub [:kit-data-by-keywords [:feedwater-valve :damper :unit]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-valve :damper :view]])]\n    ($ f/field-row {:label \"VALVE STATE\"}\n       ($ f/select {:data      [{:value \"%\" :label \"%\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:damper :unit] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-valve [[:damper :view] (not view)]])}))))\n\n(defnc flow-rate-hud-settings []\n  (let [unit (use-sub [:kit-data-by-keywords [:feedwater-valve :flow-rate :unit]])\n        view (use-sub [:kit-data-by-keywords [:feedwater-valve :flow-rate :view]])]\n    ($ f/field-row {:label \"FLOW-RATE\"}\n       ($ f/select {:data      [{:value \"t/h\" :label \"t/h\"} {:value \"T/h\" :label \"T/h\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:flow-rate :unit] %]])})\n       ($ f/checkbox {:value     view\n                      :on-change #(dispatch [:change-feedwater-valve [[:flow-rate :view] (not view)]])}))))\n\n(defnc damper-init-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-valve :init-sim-output :damper :value]])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-valve :damper :unit]])\n        limits (-> UNIT-LIMITS :feed-water-elect-valve-position (get unit))\n        validate-message (str \"Initial valve position value must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"VALVE POSITION\"}\n       ($ f/input-number {:value     value\n                          :on-change #(dispatch [:change-feedwater-valve [[:init-sim-output :damper :value] %]])\n                          :on-blur   (fn [] (f/validate-input-number value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-valve [[:init-sim-output :damper :value] %]])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"%\" :label \"%\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:damper :unit] %]])}))))\n\n(defnc flow-rate-init-max-value []\n  (let [converted-value (use-sub [:feedwater-valve-flow-rate-max-converted-value])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-valve :flow-rate :unit]])\n        limits (-> UNIT-LIMITS :feed-water-elect-valve-flow-rate (get unit))\n        validate-message (str \"Initial flow rate maximum value must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"MAXIMUM FLOW-RATE\"}\n       ($ f/input-number {:value     converted-value\n                          :on-change #(dispatch [:change-feedwater-valve-flow-rate-max-value %])\n                          :on-blur   (fn [] (f/validate-input-number converted-value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-valve-flow-rate-max-value %])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"t/h\" :label \"t/h\"} {:value \"T/h\" :label \"T/h\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:flow-rate :unit] %]])}))))\n\n\n(defnc travel-time-init-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-valve :init-sim-output :transition :travel-time :value]])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-valve :transition :travel-time :unit]])\n        limits (-> UNIT-LIMITS :feed-water-elect-valve-travel-time (get unit))\n        validate-message (str \"Initial valve travel time value must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"VALVE TRAVEL TIME\"}\n       ($ f/input-number {:value     value\n                          :on-change #(dispatch [:change-feedwater-valve [[:init-sim-output :transition :travel-time :value] %]])\n                          :on-blur   (fn [] (f/validate-input-number value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-valve [[:init-sim-output :transition :travel-time :value] %]])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"s\" :label \"s\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:transition :travel-time :unit] %]])}))))\n\n(defnc potentiometer-connection-init-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-valve :potentiometer :connection]])]\n    ($ f/field-row {:label \"FEEDBACK POTENTIOMETER\"}\n       ($ f/select {:data      [{:value \"connected\" :label \"connected\"} {:value \"disconnected\" :label \"disconnected\"}]\n                    :value     value\n                    :on-change #(dispatch [:change-feedwater-valve [[:potentiometer :connection] %]])}))))\n\n(defnc potentiometer-damper-closed-init-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-valve :potentiometer :damper :closed]])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-valve :potentiometer :damper :unit]])\n        limits (-> UNIT-LIMITS :feed-water-elect-valve-potentiometer-closed (get unit))\n        validate-message (str \"Initial potentiometer raw value closed must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"POTENTIOMETER RAW VALUE CLOSED\"}\n       ($ f/input-number {:value     value\n                          :on-change #(dispatch [:change-feedwater-valve [[:potentiometer :damper :closed] %]])\n                          :on-blur   (fn [] (f/validate-input-number value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-valve [[:potentiometer :damper :closed] %]])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"byte\" :label \"byte\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:potentiometer :damper :unit] %]])}))))\n\n(defnc potentiometer-damper-open-init-value []\n  (let [value (use-sub [:kit-data-by-keywords [:feedwater-valve :potentiometer :damper :open]])\n        unit (use-sub [:kit-data-by-keywords [:feedwater-valve :potentiometer :damper :unit]])\n        limits (-> UNIT-LIMITS :feed-water-elect-valve-potentiometer-open (get unit))\n        validate-message (str \"Initial potentiometer raw value open must be within following range: [\" (:min limits) \" - \" (:max limits) \"] \" unit)]\n    ($ f/field-row {:label \"POTENTIOMETER RAW VALUE OPEN\"}\n       ($ f/input-number {:value     value\n                          :on-change #(dispatch [:change-feedwater-valve [[:potentiometer :damper :open] %]])\n                          :on-blur   (fn [] (f/validate-input-number value\n                                                                     (:min limits)\n                                                                     (:max limits)\n                                                                     validate-message\n                                                                     #(dispatch [:change-feedwater-valve [[:potentiometer :damper :open] %]])))\n                          :&         limits})\n\n       ($ f/select {:data      [{:value \"byte\" :label \"byte\"}]\n                    :value     unit\n                    :on-change #(dispatch [:change-feedwater-valve [[:potentiometer :damper :unit] %]])}))))\n\n\n\n\n(defnc settings-form []\n  (let [show-settings-form-sim-start-values (use-sub [:show-settings-form-sim-start-values])]\n    (<>\n      (d/div {:class \"divider\" :style {:margin-top 0}} \"head-up-display\")\n\n      ($ mode-hud-settings)\n\n      ($ damper-hud-settings)\n\n      ($ flow-rate-hud-settings)\n\n      (when show-settings-form-sim-start-values\n        (<>\n          (d/div {:class \"divider\"} \"simulation start values\")\n\n          ($ damper-init-value)\n\n          (d/div {:class \"divider\"} \"specifications\")\n\n          ($ flow-rate-init-max-value)\n\n          ($ travel-time-init-value)\n\n          ($ potentiometer-connection-init-value)\n\n          ($ potentiometer-damper-closed-init-value)\n\n          ($ potentiometer-damper-open-init-value))))))\n\n(defnc feedwater-valve-settings []\n  (let [show-settings (use-sub [:kit-data-by-keywords [:feedwater-valve :settings-view]])]\n    (when show-settings\n      ($ modal/settings {:title      \"Feedwater Electric Valve Settings\"\n                         :on-default #(dispatch [:restore-defaults-feedwater-valve-settings])\n                         :on-done    #(dispatch [:apply-feedwater-valve-settings])}\n\n         ($ settings-form)))))\n"]}