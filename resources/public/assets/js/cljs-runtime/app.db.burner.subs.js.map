{"version":3,"sources":["app/db/burner/subs.cljs"],"mappings":";AAIA,iDAAA,jDAACA,0GACQ,WAAAC,SAA0BM;AAA1B,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAAA,LAAsBI;UAAtB,AAAAF,4CAAAF,eAAA,jEAAaG;AAAb,AACE,yDAAA,wIAAA,1LAACG,+CAAOF,sFAAI,AAACG,gDAAQJ;;AAEhC,mBAAA,gHAAA,gDAAA,mFAAA,tQAACK,uUAEQ,WAAKC,OAAOJ;AAAZ,AACE,IAAAK,aAA2B,AAAA,0FAAWD;IAAtCC,iBAAA,AAAAT,4BAAAS;WAAA,AAAAR,4CAAAQ,eAAA,lEAAcC;YAAd,AAAAT,4CAAAQ,eAAA,nEAAmBE;AAAnB,AACE,IAAAC,WAAQ,AAAA,8EAAKD;IAAbC,eAAA,gGAAAA,9FACQ,kDAAA,lDAACC,6CAAEH,aAAY,WAAI,CAAAE,WAAA,vBAAeE;AAD1C,AAAA,AAEiB,kBAAK,2DAAA,KAAA,yDAAAF,zHAACG,XAAsBC;;;AAE1D,mBAAA,mHAAA,gDAAA,mFAAA,zQAACT,0UAEQ,WAAKC,OAAOJ;AAAZ,AACE,IAAAa,aAA2B,AAAA,0FAAWT;IAAtCS,iBAAA,AAAAjB,4BAAAiB;WAAA,AAAAhB,4CAAAgB,eAAA,lEAAcP;YAAd,AAAAT,4CAAAgB,eAAA,nEAAmBN;AAAnB,AACE,IAAAO,WAAQ,AAAA,gFAAMP;IAAdO,eAAA,gGAAAA,9FACQ,kDAAA,lDAACL,6CAAEH,aAAY,WAAI,CAAAQ,WAAA,vBAAeJ;AAD1C,AAAA,AAEiB,kBAAK,2DAAA,KAAA,yDAAAI,zHAACH,XAAsBC;;;AAE1D,mBAAA,4GAAA,gDAAA,mFAAA,lQAACT,mUAEQ,WAAKC,OAAOJ;AAAZ,AACE,IAAAe,aAA+B,AAAA,qFAAQX;IAAvCW,iBAAA,AAAAnB,4BAAAmB;WAAA,AAAAlB,4CAAAkB,eAAA,lEAAcT;gBAAd,AAAAT,4CAAAkB,eAAA,vEAAmBC;AAAnB,AACE,IAAAC,WAAQD;AAAR,AAAA,GACQ,kDAAA,lDAACP,6CAAEH;AAAW,QAAAW,WAAA;;AADtBA;;;AAGb,mBAAA,qGAAA,gDAAA,mFAAA,3PAACd,4TAEQ,WAAKC,OAAOJ;AAAZ,AACE,IAAAkB,aAA2B,AAAA,qFAAQd;IAAnCc,iBAAA,AAAAtB,4BAAAsB;WAAA,AAAArB,4CAAAqB,eAAA,lEAAcZ;YAAd,AAAAT,4CAAAqB,eAAA,nEAAmBX;AAAnB,AACE,IAAAY,WAAQZ;AAAR,AAAA,GACQ,kDAAA,lDAACE,6CAAEH;AAAW,QAAAa,WAAA;;AADtBA;;;AAGb,mBAAA,qIAAA,gDAAA,mFAAA,3RAAChB,4VAEQ,WAAKC,OAAOJ;AAAZ,AACE,IAAAoB,aAA2B,AAAA,qFAAA,AAAA,2GAAIhB;IAA/BgB,iBAAA,AAAAxB,4BAAAwB;WAAA,AAAAvB,4CAAAuB,eAAA,lEAAcd;YAAd,AAAAT,4CAAAuB,eAAA,nEAAmBb;AAAnB,AACE,IAAAc,WAAQd;IAARc,eAAA,qOAAAA,nOACQ,kDAAA,lDAACZ,6CAAEH,uBAAiB,oIAAK,CAAA,SAAAe,nIAAS,2DAAA,KAAA,hEAACV,XAAsBC;AADjE,AAAA,GAEQ,kDAAA,lDAACH,6CAAEH;AAAiB,kBAAK,2DAAA,KAAA,yDAAAe,zHAACV,XAAsBC;;AAFxDS;;;AAIb,mBAAA,+FAAA,gDAAA,mFAAA,rPAAClB,uUAEQ,WAAKmB,gBAAgBtB;AAArB,AACE,oEAAA,7DAACS,6CAAEa","names":["refx.alpha.reg_sub","p__54251","map__54254","cljs.core/--destructure-map","cljs.core.get","kit","db","_","cljs.core.get_in","cljs.core.keyword","refx.alpha/reg-sub","burner","map__54269","unit","value","G__54276","cljs.core._EQ_","Math/round","cljs.pprint.cl_format","js/parseFloat","map__54319","G__54330","map__54361","max-value","G__54370","map__54389","G__54395","map__54417","G__54418","current-hotspot"],"sourcesContent":["(ns app.db.burner.subs\n  (:require [refx.alpha :refer [reg-sub]]\n            [cljs.pprint :refer [cl-format]]))\n\n(reg-sub :burner\n         (fn [{:keys [kit] :as db} _]\n           (get-in db [(keyword kit) :burner])))\n\n(reg-sub :burner-pressure-converted-value-on\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (:pressure burner)]\n             (cond-> (:on value)\n                     (= unit \"psi\") (-> (* 14.5037738) Math/round)\n                     :default (->> (cl-format nil \"~,1f\") js/parseFloat)))))\n\n(reg-sub :burner-pressure-converted-value-off\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (:pressure burner)]\n             (cond-> (:off value)\n                     (= unit \"psi\") (-> (* 14.5037738) Math/round)\n                     :default (->> (cl-format nil \"~,1f\") js/parseFloat)))))\n\n(reg-sub :burner-power-max-converted-value\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit max-value]} (:power burner)]\n             (cond-> max-value\n                     (= unit \"MW\") (* 0.001)))))\n\n(reg-sub :burner-power-converted-value\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (:power burner)]\n             (cond-> value\n                     (= unit \"MW\") (* 0.001)))))\n\n(reg-sub :burner-fuel-consumption-coeff-converted-value\n         :<- [:burner]\n         (fn [burner _]\n           (let [{:keys [unit value]} (-> burner :fuel-consumption :coeff)]\n             (cond-> value\n                     (= unit \"nm\u00b3/kW*s\") (->> (* 3600) (cl-format nil \"~,1f\") js/parseFloat)\n                     (= unit \"nm\u00b3/kW*h\") (->> (cl-format nil \"~,3f\") js/parseFloat)))))\n\n(reg-sub :burner-show-toolbar-panel\n         :<- [:current-hotspot]\n         (fn [current-hotspot _]\n           (= current-hotspot \"burner\")))\n\n\n\n\n\n\n\n\n"]}